{"version":3,"sources":["node_modules/systemjs/dist/system.src.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,sBAAseAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,UAAU;AACV;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,mBAAmB,8BAA8B;AACjD,kKAAkK;;AAElK;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,qCAAqC;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,KAAK;;AAEL,+CAA+C;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,8BAA8B;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA,yBAAyB,8BAA8B;AACvD;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,4CAA4C;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE;;AAEX;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oEAAoE,KAAK;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAmB;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,2BAA2B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA,+BAA+B,IAAI,IAAI;AACvC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yCAAyC;AAC3F,OAAO,EAAE;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA,0BAA0B;;;AAG1B;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,yEAAyE,iBAAiB;AAC1F;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iDAAiD,+BAA+B,kBAAkB;AAClG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,uDAAuD;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,wCAAwC;;AAE3E;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,qBAAqB;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC,8CAA8C,iDAAiD;;AAErI;AACA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,yFAAyF;;AAEzF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA,0BAA0B,GAAG,wDAAwD,qBAAqB,wCAAwC;;AAElJ,qGAAqG,gBAAgB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,wCAAwC,EAAE,aAAa;AAC5E,uPAAuP;;AAEvP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sIAAsI,oCAAoC;;AAE1K;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;AACP,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA,oFAAoF,gBAAgB;AACpG,6EAA6E,aAAa;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA,aAAa;AACb,kBAAkB;AAClB,kBAAkB;AAClB,cAAc;AACd,iBAAiB;;AAEjB;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA,iBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,uHAAuH,sBAAsB,wBAAwB,EAAE;AACvK;AACA,WAAW;;AAEX;AACA;AACA;AACA,OAAO;AACP;AACA,sHAAsH,0BAA0B;AAChJ;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;AACD","file":"scripts.js","sourcesContent":["/*\n    * SystemJS v0.21.3 Dev\n    */\n(function () {\n  'use strict';\n\n  /*\n   * Environment\n   */\n  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\n  var isNode = typeof process !== 'undefined' && process.versions && process.versions.node;\n  var isWindows = typeof process !== 'undefined' && typeof process.platform === 'string' && process.platform.match(/^win/);\n\n  var envGlobal = typeof self !== 'undefined' ? self : global;\n\n  /*\n   * Simple Symbol() shim\n   */\n  var hasSymbol = typeof Symbol !== 'undefined';\n  function createSymbol (name) {\n    return hasSymbol ? Symbol() : '@@' + name;\n  }\n\n  /*\n   * Environment baseURI\n   */\n  var baseURI;\n\n  // environent baseURI detection\n  if (typeof document != 'undefined' && document.getElementsByTagName) {\n    baseURI = document.baseURI;\n\n    if (!baseURI) {\n      var bases = document.getElementsByTagName('base');\n      baseURI = bases[0] && bases[0].href || window.location.href;\n    }\n  }\n  else if (typeof location != 'undefined') {\n    baseURI = location.href;\n  }\n\n  // sanitize out the hash and querystring\n  if (baseURI) {\n    baseURI = baseURI.split('#')[0].split('?')[0];\n    var slashIndex = baseURI.lastIndexOf('/');\n    if (slashIndex !== -1)\n      baseURI = baseURI.substr(0, slashIndex + 1);\n  }\n  else if (typeof process !== 'undefined' && process.cwd) {\n    baseURI = 'file://' + (isWindows ? '/' : '') + process.cwd();\n    if (isWindows)\n      baseURI = baseURI.replace(/\\\\/g, '/');\n  }\n  else {\n    throw new TypeError('No environment baseURI');\n  }\n\n  // ensure baseURI has trailing \"/\"\n  if (baseURI[baseURI.length - 1] !== '/')\n    baseURI += '/';\n\n  /*\n   * LoaderError with chaining for loader stacks\n   */\n  var errArgs = new Error(0, '_').fileName == '_';\n  function LoaderError__Check_error_message_for_loader_stack (childErr, newMessage) {\n    // Convert file:/// URLs to paths in Node\n    if (!isBrowser)\n      newMessage = newMessage.replace(isWindows ? /file:\\/\\/\\//g : /file:\\/\\//g, '');\n\n    var message = (childErr.message || childErr) + '\\n  ' + newMessage;\n\n    var err;\n    if (errArgs && childErr.fileName)\n      err = new Error(message, childErr.fileName, childErr.lineNumber);\n    else\n      err = new Error(message);\n\n\n    var stack = childErr.originalErr ? childErr.originalErr.stack : childErr.stack;\n\n    if (isNode)\n      // node doesn't show the message otherwise\n      err.stack = message + '\\n  ' + stack;\n    else\n      err.stack = stack;\n\n    err.originalErr = childErr.originalErr || childErr;\n\n    return err;\n  }\n\n  /*\n   * Optimized URL normalization assuming a syntax-valid URL parent\n   */\n  function throwResolveError (relUrl, parentUrl) {\n    throw new RangeError('Unable to resolve \"' + relUrl + '\" to ' + parentUrl);\n  }\n  function resolveIfNotPlain (relUrl, parentUrl) {\n    relUrl = relUrl.trim();\n    var parentProtocol = parentUrl && parentUrl.substr(0, parentUrl.indexOf(':') + 1);\n\n    var firstChar = relUrl[0];\n    var secondChar = relUrl[1];\n\n    // protocol-relative\n    if (firstChar === '/' && secondChar === '/') {\n      if (!parentProtocol)\n        throwResolveError(relUrl, parentUrl);\n      return parentProtocol + relUrl;\n    }\n    // relative-url\n    else if (firstChar === '.' && (secondChar === '/' || secondChar === '.' && (relUrl[2] === '/' || relUrl.length === 2 && (relUrl += '/')) ||\n        relUrl.length === 1  && (relUrl += '/')) ||\n        firstChar === '/') {\n      var parentIsPlain = !parentProtocol || parentUrl[parentProtocol.length] !== '/';\n\n      // read pathname from parent if a URL\n      // pathname taken to be part after leading \"/\"\n      var pathname;\n      if (parentIsPlain) {\n        // resolving to a plain parent -> skip standard URL prefix, and treat entire parent as pathname\n        if (parentUrl === undefined)\n          throwResolveError(relUrl, parentUrl);\n        pathname = parentUrl;\n      }\n      else if (parentUrl[parentProtocol.length + 1] === '/') {\n        // resolving to a :// so we need to read out the auth and host\n        if (parentProtocol !== 'file:') {\n          pathname = parentUrl.substr(parentProtocol.length + 2);\n          pathname = pathname.substr(pathname.indexOf('/') + 1);\n        }\n        else {\n          pathname = parentUrl.substr(8);\n        }\n      }\n      else {\n        // resolving to :/ so pathname is the /... part\n        pathname = parentUrl.substr(parentProtocol.length + 1);\n      }\n\n      if (firstChar === '/') {\n        if (parentIsPlain)\n          throwResolveError(relUrl, parentUrl);\n        else\n          return parentUrl.substr(0, parentUrl.length - pathname.length - 1) + relUrl;\n      }\n\n      // join together and split for removal of .. and . segments\n      // looping the string instead of anything fancy for perf reasons\n      // '../../../../../z' resolved to 'x/y' is just 'z' regardless of parentIsPlain\n      var segmented = pathname.substr(0, pathname.lastIndexOf('/') + 1) + relUrl;\n\n      var output = [];\n      var segmentIndex = -1;\n\n      for (var i = 0; i < segmented.length; i++) {\n        // busy reading a segment - only terminate on '/'\n        if (segmentIndex !== -1) {\n          if (segmented[i] === '/') {\n            output.push(segmented.substring(segmentIndex, i + 1));\n            segmentIndex = -1;\n          }\n          continue;\n        }\n\n        // new segment - check if it is relative\n        if (segmented[i] === '.') {\n          // ../ segment\n          if (segmented[i + 1] === '.' && (segmented[i + 2] === '/' || i + 2 === segmented.length)) {\n            output.pop();\n            i += 2;\n          }\n          // ./ segment\n          else if (segmented[i + 1] === '/' || i + 1 === segmented.length) {\n            i += 1;\n          }\n          else {\n            // the start of a new segment as below\n            segmentIndex = i;\n            continue;\n          }\n\n          // this is the plain URI backtracking error (../, package:x -> error)\n          if (parentIsPlain && output.length === 0)\n            throwResolveError(relUrl, parentUrl);\n\n          continue;\n        }\n\n        // it is the start of a new segment\n        segmentIndex = i;\n      }\n      // finish reading out the last segment\n      if (segmentIndex !== -1)\n        output.push(segmented.substr(segmentIndex));\n\n      return parentUrl.substr(0, parentUrl.length - pathname.length) + output.join('');\n    }\n\n    // sanitizes and verifies (by returning undefined if not a valid URL-like form)\n    // Windows filepath compatibility is an added convenience here\n    var protocolIndex = relUrl.indexOf(':');\n    if (protocolIndex !== -1) {\n      if (isNode) {\n        // C:\\x becomes file:///c:/x (we don't support C|\\x)\n        if (relUrl[1] === ':' && relUrl[2] === '\\\\' && relUrl[0].match(/[a-z]/i))\n          return 'file:///' + relUrl.replace(/\\\\/g, '/');\n      }\n      return relUrl;\n    }\n  }\n\n  var resolvedPromise = Promise.resolve();\n\n  /*\n   * Simple Array values shim\n   */\n  function arrayValues (arr) {\n    if (arr.values)\n      return arr.values();\n\n    if (typeof Symbol === 'undefined' || !Symbol.iterator)\n      throw new Error('Symbol.iterator not supported in this browser');\n\n    var iterable = {};\n    iterable[Symbol.iterator] = function () {\n      var keys = Object.keys(arr);\n      var keyIndex = 0;\n      return {\n        next: function () {\n          if (keyIndex < keys.length)\n            return {\n              value: arr[keys[keyIndex++]],\n              done: false\n            };\n          else\n            return {\n              value: undefined,\n              done: true\n            };\n        }\n      };\n    };\n    return iterable;\n  }\n\n  /*\n   * 3. Reflect.Loader\n   *\n   * We skip the entire native internal pipeline, just providing the bare API\n   */\n  // 3.1.1\n  function Loader () {\n    this.registry = new Registry();\n  }\n  // 3.3.1\n  Loader.prototype.constructor = Loader;\n\n  function ensureInstantiated (module) {\n    if (!(module instanceof ModuleNamespace))\n      throw new TypeError('Module instantiation did not return a valid namespace object.');\n    return module;\n  }\n\n  // 3.3.2\n  Loader.prototype.import = function (key, parent) {\n    if (typeof key !== 'string')\n      throw new TypeError('Loader import method must be passed a module key string');\n    // custom resolveInstantiate combined hook for better perf\n    var loader = this;\n    return resolvedPromise\n    .then(function () {\n      return loader[RESOLVE_INSTANTIATE](key, parent);\n    })\n    .then(ensureInstantiated)\n    //.then(Module.evaluate)\n    .catch(function (err) {\n      throw LoaderError__Check_error_message_for_loader_stack(err, 'Loading ' + key + (parent ? ' from ' + parent : ''));\n    });\n  };\n  // 3.3.3\n  var RESOLVE = Loader.resolve = createSymbol('resolve');\n\n  /*\n   * Combined resolve / instantiate hook\n   *\n   * Not in current reduced spec, but necessary to separate RESOLVE from RESOLVE + INSTANTIATE as described\n   * in the spec notes of this repo to ensure that loader.resolve doesn't instantiate when not wanted.\n   *\n   * We implement RESOLVE_INSTANTIATE as a single hook instead of a separate INSTANTIATE in order to avoid\n   * the need for double registry lookups as a performance optimization.\n   */\n  var RESOLVE_INSTANTIATE = Loader.resolveInstantiate = createSymbol('resolveInstantiate');\n\n  // default resolveInstantiate is just to call resolve and then get from the registry\n  // this provides compatibility for the resolveInstantiate optimization\n  Loader.prototype[RESOLVE_INSTANTIATE] = function (key, parent) {\n    var loader = this;\n    return loader.resolve(key, parent)\n    .then(function (resolved) {\n      return loader.registry.get(resolved);\n    });\n  };\n\n  function ensureResolution (resolvedKey) {\n    if (resolvedKey === undefined)\n      throw new RangeError('No resolution found.');\n    return resolvedKey;\n  }\n\n  Loader.prototype.resolve = function (key, parent) {\n    var loader = this;\n    return resolvedPromise\n    .then(function() {\n      return loader[RESOLVE](key, parent);\n    })\n    .then(ensureResolution)\n    .catch(function (err) {\n      throw LoaderError__Check_error_message_for_loader_stack(err, 'Resolving ' + key + (parent ? ' to ' + parent : ''));\n    });\n  };\n\n  // 3.3.4 (import without evaluate)\n  // this is not documented because the use of deferred evaluation as in Module.evaluate is not\n  // documented, as it is not considered a stable feature to be encouraged\n  // Loader.prototype.load may well be deprecated if this stays disabled\n  /* Loader.prototype.load = function (key, parent) {\n    return Promise.resolve(this[RESOLVE_INSTANTIATE](key, parent || this.key))\n    .catch(function (err) {\n      throw addToError(err, 'Loading ' + key + (parent ? ' from ' + parent : ''));\n    });\n  }; */\n\n  /*\n   * 4. Registry\n   *\n   * Instead of structuring through a Map, just use a dictionary object\n   * We throw for construction attempts so this doesn't affect the public API\n   *\n   * Registry has been adjusted to use Namespace objects over ModuleStatus objects\n   * as part of simplifying loader API implementation\n   */\n  var iteratorSupport = typeof Symbol !== 'undefined' && Symbol.iterator;\n  var REGISTRY = createSymbol('registry');\n  function Registry() {\n    this[REGISTRY] = {};\n  }\n  // 4.4.1\n  if (iteratorSupport) {\n    // 4.4.2\n    Registry.prototype[Symbol.iterator] = function () {\n      return this.entries()[Symbol.iterator]();\n    };\n\n    // 4.4.3\n    Registry.prototype.entries = function () {\n      var registry = this[REGISTRY];\n      return arrayValues(Object.keys(registry).map(function (key) {\n        return [key, registry[key]];\n      }));\n    };\n  }\n\n  // 4.4.4\n  Registry.prototype.keys = function () {\n    return arrayValues(Object.keys(this[REGISTRY]));\n  };\n  // 4.4.5\n  Registry.prototype.values = function () {\n    var registry = this[REGISTRY];\n    return arrayValues(Object.keys(registry).map(function (key) {\n      return registry[key];\n    }));\n  };\n  // 4.4.6\n  Registry.prototype.get = function (key) {\n    return this[REGISTRY][key];\n  };\n  // 4.4.7\n  Registry.prototype.set = function (key, namespace) {\n    if (!(namespace instanceof ModuleNamespace))\n      throw new Error('Registry must be set with an instance of Module Namespace');\n    this[REGISTRY][key] = namespace;\n    return this;\n  };\n  // 4.4.8\n  Registry.prototype.has = function (key) {\n    return Object.hasOwnProperty.call(this[REGISTRY], key);\n  };\n  // 4.4.9\n  Registry.prototype.delete = function (key) {\n    if (Object.hasOwnProperty.call(this[REGISTRY], key)) {\n      delete this[REGISTRY][key];\n      return true;\n    }\n    return false;\n  };\n\n  /*\n   * Simple ModuleNamespace Exotic object based on a baseObject\n   * We export this for allowing a fast-path for module namespace creation over Module descriptors\n   */\n  // var EVALUATE = createSymbol('evaluate');\n  var BASE_OBJECT = createSymbol('baseObject');\n\n  // 8.3.1 Reflect.Module\n  /*\n   * Best-effort simplified non-spec implementation based on\n   * a baseObject referenced via getters.\n   *\n   * Allows:\n   *\n   *   loader.registry.set('x', new Module({ default: 'x' }));\n   *\n   * Optional evaluation function provides experimental Module.evaluate\n   * support for non-executed modules in registry.\n   */\n  function ModuleNamespace (baseObject/*, evaluate*/) {\n    Object.defineProperty(this, BASE_OBJECT, {\n      value: baseObject\n    });\n\n    // evaluate defers namespace population\n    /* if (evaluate) {\n      Object.defineProperty(this, EVALUATE, {\n        value: evaluate,\n        configurable: true,\n        writable: true\n      });\n    }\n    else { */\n      Object.keys(baseObject).forEach(extendNamespace, this);\n    //}\n  }// 8.4.2\n  ModuleNamespace.prototype = Object.create(null);\n\n  if (typeof Symbol !== 'undefined' && Symbol.toStringTag)\n    Object.defineProperty(ModuleNamespace.prototype, Symbol.toStringTag, {\n      value: 'Module'\n    });\n\n  function extendNamespace (key) {\n    Object.defineProperty(this, key, {\n      enumerable: true,\n      get: function () {\n        return this[BASE_OBJECT][key];\n      }\n    });\n  }\n\n  /* function doEvaluate (evaluate, context) {\n    try {\n      evaluate.call(context);\n    }\n    catch (e) {\n      return e;\n    }\n  }\n\n  // 8.4.1 Module.evaluate... not documented or used because this is potentially unstable\n  Module.evaluate = function (ns) {\n    var evaluate = ns[EVALUATE];\n    if (evaluate) {\n      ns[EVALUATE] = undefined;\n      var err = doEvaluate(evaluate);\n      if (err) {\n        // cache the error\n        ns[EVALUATE] = function () {\n          throw err;\n        };\n        throw err;\n      }\n      Object.keys(ns[BASE_OBJECT]).forEach(extendNamespace, ns);\n    }\n    // make chainable\n    return ns;\n  }; */\n\n  /*\n   * Register Loader\n   *\n   * Builds directly on top of loader polyfill to provide:\n   * - loader.register support\n   * - hookable higher-level resolve\n   * - instantiate hook returning a ModuleNamespace or undefined for es module loading\n   * - loader error behaviour as in HTML and loader specs, caching load and eval errors separately\n   * - build tracing support by providing a .trace=true and .loads object format\n   */\n\n  var REGISTER_INTERNAL = createSymbol('register-internal');\n\n  function RegisterLoader () {\n    Loader.call(this);\n\n    var registryDelete = this.registry.delete;\n    this.registry.delete = function (key) {\n      var deleted = registryDelete.call(this, key);\n\n      // also delete from register registry if linked\n      if (records.hasOwnProperty(key) && !records[key].linkRecord) {\n        delete records[key];\n        deleted = true;\n      }\n\n      return deleted;\n    };\n\n    var records = {};\n\n    this[REGISTER_INTERNAL] = {\n      // last anonymous System.register call\n      lastRegister: undefined,\n      // in-flight es module load records\n      records: records\n    };\n\n    // tracing\n    this.trace = false;\n  }\n\n  RegisterLoader.prototype = Object.create(Loader.prototype);\n  RegisterLoader.prototype.constructor = RegisterLoader;\n\n  var INSTANTIATE = RegisterLoader.instantiate = createSymbol('instantiate');\n\n  // default normalize is the WhatWG style normalizer\n  RegisterLoader.prototype[RegisterLoader.resolve = Loader.resolve] = function (key, parentKey) {\n    return resolveIfNotPlain(key, parentKey || baseURI);\n  };\n\n  RegisterLoader.prototype[INSTANTIATE] = function (key, processAnonRegister) {};\n\n  // once evaluated, the linkRecord is set to undefined leaving just the other load record properties\n  // this allows tracking new binding listeners for es modules through importerSetters\n  // for dynamic modules, the load record is removed entirely.\n  function createLoadRecord (state, key, registration) {\n    return state.records[key] = {\n      key: key,\n\n      // defined System.register cache\n      registration: registration,\n\n      // module namespace object\n      module: undefined,\n\n      // es-only\n      // this sticks around so new module loads can listen to binding changes\n      // for already-loaded modules by adding themselves to their importerSetters\n      importerSetters: undefined,\n\n      loadError: undefined,\n      evalError: undefined,\n\n      // in-flight linking record\n      linkRecord: {\n        // promise for instantiated\n        instantiatePromise: undefined,\n        dependencies: undefined,\n        execute: undefined,\n        executingRequire: false,\n\n        // underlying module object bindings\n        moduleObj: undefined,\n\n        // es only, also indicates if es or not\n        setters: undefined,\n\n        // promise for instantiated dependencies (dependencyInstantiations populated)\n        depsInstantiatePromise: undefined,\n        // will be the array of dependency load record or a module namespace\n        dependencyInstantiations: undefined,\n\n        // NB optimization and way of ensuring module objects in setters\n        // indicates setters which should run pre-execution of that dependency\n        // setters is then just for completely executed module objects\n        // alternatively we just pass the partially filled module objects as\n        // arguments into the execute function\n        // hoisted: undefined\n      }\n    };\n  }\n\n  RegisterLoader.prototype[Loader.resolveInstantiate] = function (key, parentKey) {\n    var loader = this;\n    var state = this[REGISTER_INTERNAL];\n    var registry = this.registry[REGISTRY];\n\n    return resolveInstantiate(loader, key, parentKey, registry, state)\n    .then(function (instantiated) {\n      if (instantiated instanceof ModuleNamespace)\n        return instantiated;\n\n      // resolveInstantiate always returns a load record with a link record and no module value\n      var link = instantiated.linkRecord;\n\n      // if already beaten to done, return\n      if (!link) {\n        if (instantiated.module)\n          return instantiated.module;\n        throw instantiated.evalError;\n      }\n\n      return deepInstantiateDeps(loader, instantiated, link, registry, state)\n      .then(function () {\n        return ensureEvaluate(loader, instantiated, link, registry, state, undefined);\n      });\n    });\n  };\n\n  function resolveInstantiate (loader, key, parentKey, registry, state) {\n    // normalization shortpath for already-normalized key\n    // could add a plain name filter, but doesn't yet seem necessary for perf\n    var module = registry[key];\n    if (module)\n      return Promise.resolve(module);\n\n    var load = state.records[key];\n\n    // already linked but not in main registry is ignored\n    if (load && !load.module) {\n      if (load.loadError)\n        return Promise.reject(load.loadError);\n      return instantiate(loader, load, load.linkRecord, registry, state);\n    }\n\n    return loader.resolve(key, parentKey)\n    .then(function (resolvedKey) {\n      // main loader registry always takes preference\n      module = registry[resolvedKey];\n      if (module)\n        return module;\n\n      load = state.records[resolvedKey];\n\n      // already has a module value but not already in the registry (load.module)\n      // means it was removed by registry.delete, so we should\n      // disgard the current load record creating a new one over it\n      // but keep any existing registration\n      if (!load || load.module)\n        load = createLoadRecord(state, resolvedKey, load && load.registration);\n\n      if (load.loadError)\n        return Promise.reject(load.loadError);\n\n      var link = load.linkRecord;\n      if (!link)\n        return load;\n\n      return instantiate(loader, load, link, registry, state);\n    });\n  }\n\n  function createProcessAnonRegister (loader, load, state) {\n    return function () {\n      var lastRegister = state.lastRegister;\n\n      if (!lastRegister)\n        return !!load.registration;\n\n      state.lastRegister = undefined;\n      load.registration = lastRegister;\n\n      return true;\n    };\n  }\n\n  function instantiate (loader, load, link, registry, state) {\n    return link.instantiatePromise || (link.instantiatePromise =\n    // if there is already an existing registration, skip running instantiate\n    (load.registration ? Promise.resolve() : Promise.resolve().then(function () {\n      state.lastRegister = undefined;\n      return loader[INSTANTIATE](load.key, loader[INSTANTIATE].length > 1 && createProcessAnonRegister(loader, load, state));\n    }))\n    .then(function (instantiation) {\n      // direct module return from instantiate -> we're done\n      if (instantiation !== undefined) {\n        if (!(instantiation instanceof ModuleNamespace))\n          throw new TypeError('Instantiate did not return a valid Module object.');\n\n        delete state.records[load.key];\n        if (loader.trace)\n          traceLoad(loader, load, link);\n        return registry[load.key] = instantiation;\n      }\n\n      // run the cached loader.register declaration if there is one\n      var registration = load.registration;\n      // clear to allow new registrations for future loads (combined with registry delete)\n      load.registration = undefined;\n      if (!registration)\n        throw new TypeError('Module instantiation did not call an anonymous or correctly named System.register.');\n\n      link.dependencies = registration[0];\n\n      load.importerSetters = [];\n\n      link.moduleObj = {};\n\n      // process System.registerDynamic declaration\n      if (registration[2]) {\n        link.moduleObj.default = link.moduleObj.__useDefault = {};\n        link.executingRequire = registration[1];\n        link.execute = registration[2];\n      }\n\n      // process System.register declaration\n      else {\n        registerDeclarative(loader, load, link, registration[1]);\n      }\n\n      return load;\n    })\n    .catch(function (err) {\n      load.linkRecord = undefined;\n      throw load.loadError = load.loadError || LoaderError__Check_error_message_for_loader_stack(err, 'Instantiating ' + load.key);\n    }));\n  }\n\n  // like resolveInstantiate, but returning load records for linking\n  function resolveInstantiateDep (loader, key, parentKey, registry, state, traceDepMap) {\n    // normalization shortpaths for already-normalized key\n    // DISABLED to prioritise consistent resolver calls\n    // could add a plain name filter, but doesn't yet seem necessary for perf\n    /* var load = state.records[key];\n    var module = registry[key];\n\n    if (module) {\n      if (traceDepMap)\n        traceDepMap[key] = key;\n\n      // registry authority check in case module was deleted or replaced in main registry\n      if (load && load.module && load.module === module)\n        return load;\n      else\n        return module;\n    }\n\n    // already linked but not in main registry is ignored\n    if (load && !load.module) {\n      if (traceDepMap)\n        traceDepMap[key] = key;\n      return instantiate(loader, load, load.linkRecord, registry, state);\n    } */\n    return loader.resolve(key, parentKey)\n    .then(function (resolvedKey) {\n      if (traceDepMap)\n        traceDepMap[key] = resolvedKey;\n\n      // normalization shortpaths for already-normalized key\n      var load = state.records[resolvedKey];\n      var module = registry[resolvedKey];\n\n      // main loader registry always takes preference\n      if (module && (!load || load.module && module !== load.module))\n        return module;\n\n      if (load && load.loadError)\n        throw load.loadError;\n\n      // already has a module value but not already in the registry (load.module)\n      // means it was removed by registry.delete, so we should\n      // disgard the current load record creating a new one over it\n      // but keep any existing registration\n      if (!load || !module && load.module)\n        load = createLoadRecord(state, resolvedKey, load && load.registration);\n\n      var link = load.linkRecord;\n      if (!link)\n        return load;\n\n      return instantiate(loader, load, link, registry, state);\n    });\n  }\n\n  function traceLoad (loader, load, link) {\n    loader.loads = loader.loads || {};\n    loader.loads[load.key] = {\n      key: load.key,\n      deps: link.dependencies,\n      dynamicDeps: [],\n      depMap: link.depMap || {}\n    };\n  }\n\n  /*\n   * Convert a CJS module.exports into a valid object for new Module:\n   *\n   *   new Module(getEsModule(module.exports))\n   *\n   * Sets the default value to the module, while also reading off named exports carefully.\n   */\n  function registerDeclarative (loader, load, link, declare) {\n    var moduleObj = link.moduleObj;\n    var importerSetters = load.importerSetters;\n\n    var definedExports = false;\n\n    // closure especially not based on link to allow link record disposal\n    var declared = declare.call(envGlobal, function (name, value) {\n      if (typeof name === 'object') {\n        var changed = false;\n        for (var p in name) {\n          value = name[p];\n          if (p !== '__useDefault' && (!(p in moduleObj) || moduleObj[p] !== value)) {\n            changed = true;\n            moduleObj[p] = value;\n          }\n        }\n        if (changed === false)\n          return value;\n      }\n      else {\n        if ((definedExports || name in moduleObj) && moduleObj[name] === value)\n          return value;\n        moduleObj[name] = value;\n      }\n\n      for (var i = 0; i < importerSetters.length; i++)\n        importerSetters[i](moduleObj);\n\n      return value;\n    }, new ContextualLoader(loader, load.key));\n\n    link.setters = declared.setters;\n    link.execute = declared.execute;\n    if (declared.exports) {\n      link.moduleObj = moduleObj = declared.exports;\n      definedExports = true;\n    }\n  }\n\n  function instantiateDeps (loader, load, link, registry, state) {\n    if (link.depsInstantiatePromise)\n      return link.depsInstantiatePromise;\n\n    var depsInstantiatePromises = Array(link.dependencies.length);\n\n    for (var i = 0; i < link.dependencies.length; i++)\n      depsInstantiatePromises[i] = resolveInstantiateDep(loader, link.dependencies[i], load.key, registry, state, loader.trace && link.depMap || (link.depMap = {}));\n\n    var depsInstantiatePromise = Promise.all(depsInstantiatePromises)\n    .then(function (dependencyInstantiations) {\n      link.dependencyInstantiations = dependencyInstantiations;\n\n      // run setters to set up bindings to instantiated dependencies\n      if (link.setters) {\n        for (var i = 0; i < dependencyInstantiations.length; i++) {\n          var setter = link.setters[i];\n          if (setter) {\n            var instantiation = dependencyInstantiations[i];\n\n            if (instantiation instanceof ModuleNamespace) {\n              setter(instantiation);\n            }\n            else {\n              if (instantiation.loadError)\n                throw instantiation.loadError;\n              setter(instantiation.module || instantiation.linkRecord.moduleObj);\n              // this applies to both es and dynamic registrations\n              if (instantiation.importerSetters)\n                instantiation.importerSetters.push(setter);\n            }\n          }\n        }\n      }\n\n      return load;\n    });\n\n    if (loader.trace)\n      depsInstantiatePromise = depsInstantiatePromise.then(function () {\n        traceLoad(loader, load, link);\n        return load;\n      });\n\n    depsInstantiatePromise = depsInstantiatePromise.catch(function (err) {\n      // throw up the instantiateDeps stack\n      link.depsInstantiatePromise = undefined;\n      throw LoaderError__Check_error_message_for_loader_stack(err, 'Loading ' + load.key);\n    });\n\n    depsInstantiatePromise.catch(function () {});\n\n    return link.depsInstantiatePromise = depsInstantiatePromise;\n  }\n\n  function deepInstantiateDeps (loader, load, link, registry, state) {\n    return new Promise(function (resolve, reject) {\n      var seen = [];\n      var loadCnt = 0;\n      function queueLoad (load) {\n        var link = load.linkRecord;\n        if (!link)\n          return;\n\n        if (seen.indexOf(load) !== -1)\n          return;\n        seen.push(load);\n\n        loadCnt++;\n        instantiateDeps(loader, load, link, registry, state)\n        .then(processLoad, reject);\n      }\n      function processLoad (load) {\n        loadCnt--;\n        var link = load.linkRecord;\n        if (link) {\n          for (var i = 0; i < link.dependencies.length; i++) {\n            var depLoad = link.dependencyInstantiations[i];\n            if (!(depLoad instanceof ModuleNamespace))\n              queueLoad(depLoad);\n          }\n        }\n        if (loadCnt === 0)\n          resolve();\n      }\n      queueLoad(load);\n    });\n  }\n\n  /*\n   * System.register\n   */\n  RegisterLoader.prototype.register = function (key, deps, declare) {\n    var state = this[REGISTER_INTERNAL];\n\n    // anonymous modules get stored as lastAnon\n    if (declare === undefined) {\n      state.lastRegister = [key, deps, undefined];\n    }\n\n    // everything else registers into the register cache\n    else {\n      var load = state.records[key] || createLoadRecord(state, key, undefined);\n      load.registration = [deps, declare, undefined];\n    }\n  };\n\n  /*\n   * System.registerDyanmic\n   */\n  RegisterLoader.prototype.registerDynamic = function (key, deps, executingRequire, execute) {\n    var state = this[REGISTER_INTERNAL];\n\n    // anonymous modules get stored as lastAnon\n    if (typeof key !== 'string') {\n      state.lastRegister = [key, deps, executingRequire];\n    }\n\n    // everything else registers into the register cache\n    else {\n      var load = state.records[key] || createLoadRecord(state, key, undefined);\n      load.registration = [deps, executingRequire, execute];\n    }\n  };\n\n  // ContextualLoader class\n  // backwards-compatible with previous System.register context argument by exposing .id, .key\n  function ContextualLoader (loader, key) {\n    this.loader = loader;\n    this.key = this.id = key;\n    this.meta = {\n      url: key\n      // scriptElement: null\n    };\n  }\n  /*ContextualLoader.prototype.constructor = function () {\n    throw new TypeError('Cannot subclass the contextual loader only Reflect.Loader.');\n  };*/\n  ContextualLoader.prototype.import = function (key) {\n    if (this.loader.trace)\n      this.loader.loads[this.key].dynamicDeps.push(key);\n    return this.loader.import(key, this.key);\n  };\n  /*ContextualLoader.prototype.resolve = function (key) {\n    return this.loader.resolve(key, this.key);\n  };*/\n\n  // this is the execution function bound to the Module namespace record\n  function ensureEvaluate (loader, load, link, registry, state, seen) {\n    if (load.module)\n      return load.module;\n\n    if (load.evalError)\n      throw load.evalError;\n\n    if (seen && seen.indexOf(load) !== -1)\n      return load.linkRecord.moduleObj;\n\n    // for ES loads we always run ensureEvaluate on top-level, so empty seen is passed regardless\n    // for dynamic loads, we pass seen if also dynamic\n    var err = doEvaluate(loader, load, link, registry, state, link.setters ? [] : seen || []);\n    if (err)\n      throw err;\n\n    return load.module;\n  }\n\n  function makeDynamicRequire (loader, key, dependencies, dependencyInstantiations, registry, state, seen) {\n    // we can only require from already-known dependencies\n    return function (name) {\n      for (var i = 0; i < dependencies.length; i++) {\n        if (dependencies[i] === name) {\n          var depLoad = dependencyInstantiations[i];\n          var module;\n\n          if (depLoad instanceof ModuleNamespace)\n            module = depLoad;\n          else\n            module = ensureEvaluate(loader, depLoad, depLoad.linkRecord, registry, state, seen);\n\n          return '__useDefault' in module ? module.__useDefault : module;\n        }\n      }\n      throw new Error('Module ' + name + ' not declared as a System.registerDynamic dependency of ' + key);\n    };\n  }\n\n  // ensures the given es load is evaluated\n  // returns the error if any\n  function doEvaluate (loader, load, link, registry, state, seen) {\n    seen.push(load);\n\n    var err;\n\n    // es modules evaluate dependencies first\n    // non es modules explicitly call moduleEvaluate through require\n    if (link.setters) {\n      var depLoad, depLink;\n      for (var i = 0; i < link.dependencies.length; i++) {\n        depLoad = link.dependencyInstantiations[i];\n\n        if (depLoad instanceof ModuleNamespace)\n          continue;\n\n        // custom Module returned from instantiate\n        depLink = depLoad.linkRecord;\n        if (depLink && seen.indexOf(depLoad) === -1) {\n          if (depLoad.evalError)\n            err = depLoad.evalError;\n          else\n            // dynamic / declarative boundaries clear the \"seen\" list\n            // we just let cross format circular throw as would happen in real implementations\n            err = doEvaluate(loader, depLoad, depLink, registry, state, depLink.setters ? seen : []);\n        }\n\n        if (err) {\n          load.linkRecord = undefined;\n          load.evalError = LoaderError__Check_error_message_for_loader_stack(err, 'Evaluating ' + load.key);\n          return load.evalError;\n        }\n      }\n    }\n\n    // link.execute won't exist for Module returns from instantiate on top-level load\n    if (link.execute) {\n      // ES System.register execute\n      // \"this\" is null in ES\n      if (link.setters) {\n        err = declarativeExecute(link.execute);\n      }\n      // System.registerDynamic execute\n      // \"this\" is \"exports\" in CJS\n      else {\n        var module = { id: load.key };\n        var moduleObj = link.moduleObj;\n        Object.defineProperty(module, 'exports', {\n          configurable: true,\n          set: function (exports) {\n            moduleObj.default = moduleObj.__useDefault = exports;\n          },\n          get: function () {\n            return moduleObj.__useDefault;\n          }\n        });\n\n        var require = makeDynamicRequire(loader, load.key, link.dependencies, link.dependencyInstantiations, registry, state, seen);\n\n        // evaluate deps first\n        if (!link.executingRequire)\n          for (var i = 0; i < link.dependencies.length; i++)\n            require(link.dependencies[i]);\n\n        err = dynamicExecute(link.execute, require, moduleObj.default, module);\n\n        // pick up defineProperty calls to module.exports when we can\n        if (module.exports !== moduleObj.__useDefault)\n          moduleObj.default = moduleObj.__useDefault = module.exports;\n\n        var moduleDefault = moduleObj.default;\n\n        // __esModule flag extension support via lifting\n        if (moduleDefault && moduleDefault.__esModule) {\n          for (var p in moduleDefault) {\n            if (Object.hasOwnProperty.call(moduleDefault, p))\n              moduleObj[p] = moduleDefault[p];\n          }\n        }\n      }\n    }\n\n    // dispose link record\n    load.linkRecord = undefined;\n\n    if (err)\n      return load.evalError = LoaderError__Check_error_message_for_loader_stack(err, 'Evaluating ' + load.key);\n\n    registry[load.key] = load.module = new ModuleNamespace(link.moduleObj);\n\n    // if not an esm module, run importer setters and clear them\n    // this allows dynamic modules to update themselves into es modules\n    // as soon as execution has completed\n    if (!link.setters) {\n      if (load.importerSetters)\n        for (var i = 0; i < load.importerSetters.length; i++)\n          load.importerSetters[i](load.module);\n      load.importerSetters = undefined;\n    }\n  }\n\n  // {} is the closest we can get to call(undefined)\n  var nullContext = {};\n  if (Object.freeze)\n    Object.freeze(nullContext);\n\n  function declarativeExecute (execute) {\n    try {\n      execute.call(nullContext);\n    }\n    catch (e) {\n      return e;\n    }\n  }\n\n  function dynamicExecute (execute, require, exports, module) {\n    try {\n      var output = execute.call(envGlobal, require, exports, module);\n      if (output !== undefined)\n        module.exports = output;\n    }\n    catch (e) {\n      return e;\n    }\n  }\n\n  var resolvedPromise$1 = Promise.resolve();\r\n  function noop () {}\r\n  var emptyModule = new ModuleNamespace({});\r\n\r\n  function protectedCreateNamespace (bindings) {\r\n    if (bindings instanceof ModuleNamespace)\r\n      return bindings;\r\n\r\n    if (bindings && bindings.__esModule)\r\n      return new ModuleNamespace(bindings);\r\n\r\n    return new ModuleNamespace({ default: bindings, __useDefault: bindings });\r\n  }\r\n\r\n  var hasStringTag;\r\n  function isModule (m) {\r\n    if (hasStringTag === undefined)\r\n      hasStringTag = typeof Symbol !== 'undefined' && !!Symbol.toStringTag;\r\n    return m instanceof ModuleNamespace || hasStringTag && Object.prototype.toString.call(m) == '[object Module]';\r\n  }\r\n\r\n  var CONFIG = createSymbol('loader-config');\r\n  var METADATA = createSymbol('metadata');\r\n\r\n  var isWorker = typeof window === 'undefined' && typeof self !== 'undefined' && typeof importScripts !== 'undefined';\r\n\r\n  function warn (msg, force) {\r\n    if (force || this.warnings && typeof console !== 'undefined' && console.warn)\r\n      console.warn(msg);\r\n  }\r\n\r\n  function checkInstantiateWasm (loader, wasmBuffer, processAnonRegister) {\r\n    var bytes = new Uint8Array(wasmBuffer);\r\n\r\n    // detect by leading bytes\r\n    // Can be (new Uint32Array(fetched))[0] === 0x6D736100 when working in Node\r\n    if (bytes[0] === 0 && bytes[1] === 97 && bytes[2] === 115) {\r\n      return WebAssembly.compile(wasmBuffer).then(function (m) {\r\n        var deps = [];\r\n        var setters = [];\r\n        var importObj = {};\r\n\r\n        // we can only set imports if supported (eg Safari doesnt support)\r\n        if (WebAssembly.Module.imports)\r\n          WebAssembly.Module.imports(m).forEach(function (i) {\r\n            var key = i.module;\r\n            setters.push(function (m) {\r\n              importObj[key] = m;\r\n            });\r\n            if (deps.indexOf(key) === -1)\r\n              deps.push(key);\r\n          });\r\n        loader.register(deps, function (_export) {\r\n          return {\r\n            setters: setters,\r\n            execute: function () {\r\n              _export(new WebAssembly.Instance(m, importObj).exports);\r\n            }\r\n          };\r\n        });\r\n        processAnonRegister();\r\n\r\n        return true;\r\n      });\r\n    }\r\n\r\n    return Promise.resolve(false);\r\n  }\r\n\r\n  var parentModuleContext;\r\n  function loadNodeModule (key, baseURL) {\r\n    if (key[0] === '.')\r\n      throw new Error('Node module ' + key + ' can\\'t be loaded as it is not a package require.');\r\n\r\n    if (!parentModuleContext) {\r\n      var Module = this._nodeRequire('module');\r\n      var base = decodeURI(baseURL.substr(isWindows ? 8 : 7));\r\n      parentModuleContext = new Module(base);\r\n      parentModuleContext.paths = Module._nodeModulePaths(base);\r\n    }\r\n    return parentModuleContext.require(key);\r\n  }\r\n\r\n  function extend (a, b) {\r\n    for (var p in b) {\r\n      if (!Object.hasOwnProperty.call(b, p))\r\n        continue;\r\n      a[p] = b[p];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  function prepend (a, b) {\r\n    for (var p in b) {\r\n      if (!Object.hasOwnProperty.call(b, p))\r\n        continue;\r\n      if (a[p] === undefined)\r\n        a[p] = b[p];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  // meta first-level extends where:\r\n  // array + array appends\r\n  // object + object extends\r\n  // other properties replace\r\n  function extendMeta (a, b, _prepend) {\r\n    for (var p in b) {\r\n      if (!Object.hasOwnProperty.call(b, p))\r\n        continue;\r\n      var val = b[p];\r\n      if (a[p] === undefined)\r\n        a[p] = val;\r\n      else if (val instanceof Array && a[p] instanceof Array)\r\n        a[p] = [].concat(_prepend ? val : a[p]).concat(_prepend ? a[p] : val);\r\n      else if (typeof val == 'object' && val !== null && typeof a[p] == 'object')\r\n        a[p] = (_prepend ? prepend : extend)(extend({}, a[p]), val);\r\n      else if (!_prepend)\r\n        a[p] = val;\r\n    }\r\n  }\r\n\r\n  var supportsPreload = false, supportsPrefetch = false;\r\n  if (isBrowser)\r\n    (function () {\r\n      var relList = document.createElement('link').relList;\r\n      if (relList && relList.supports) {\r\n        supportsPrefetch = true;\r\n        try {\r\n          supportsPreload = relList.supports('preload');\r\n        }\r\n        catch (e) {}\r\n      }\r\n    })();\r\n\r\n  function preloadScript (url) {\r\n    // fallback to old fashioned image technique which still works in safari\r\n    if (!supportsPreload && !supportsPrefetch) {\r\n      var preloadImage = new Image();\r\n      preloadImage.src = url;\r\n      return;\r\n    }\r\n\r\n    var link = document.createElement('link');\r\n    if (supportsPreload) {\r\n      link.rel = 'preload';\r\n      link.as = 'script';\r\n    }\r\n    else {\r\n      // this works for all except Safari (detected by relList.supports lacking)\r\n      link.rel = 'prefetch';\r\n    }\r\n    link.href = url;\r\n    document.head.appendChild(link);\r\n  }\r\n\r\n  function workerImport (src, resolve, reject) {\r\n    try {\r\n      importScripts(src);\r\n    }\r\n    catch (e) {\r\n      reject(e);\r\n    }\r\n    resolve();\r\n  }\r\n\r\n  if (isBrowser) {\r\n    var onerror = window.onerror;\r\n    window.onerror = function globalOnerror (msg, src) {\r\n      if (onerror)\r\n        onerror.apply(this, arguments);\r\n    };\r\n  }\r\n\r\n  function scriptLoad (src, crossOrigin, integrity, resolve, reject) {\r\n    // percent encode just \"#\" for HTTP requests\r\n    src = src.replace(/#/g, '%23');\r\n\r\n    // subresource integrity is not supported in web workers\r\n    if (isWorker)\r\n      return workerImport(src, resolve, reject);\r\n\r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.charset = 'utf-8';\r\n    script.async = true;\r\n\r\n    if (crossOrigin)\r\n      script.crossOrigin = crossOrigin;\r\n    if (integrity)\r\n      script.integrity = integrity;\r\n\r\n    script.addEventListener('load', load, false);\r\n    script.addEventListener('error', error, false);\r\n\r\n    script.src = src;\r\n    document.head.appendChild(script);\r\n\r\n    function load () {\r\n      resolve();\r\n      cleanup();\r\n    }\r\n\r\n    // note this does not catch execution errors\r\n    function error (err) {\r\n      cleanup();\r\n      reject(new Error('Fetching ' + src));\r\n    }\r\n\r\n    function cleanup () {\r\n      script.removeEventListener('load', load, false);\r\n      script.removeEventListener('error', error, false);\r\n      document.head.removeChild(script);\r\n    }\r\n  }\r\n\r\n  function readMemberExpression (p, value) {\r\n    var pParts = p.split('.');\r\n    while (pParts.length)\r\n      value = value[pParts.shift()];\r\n    return value;\r\n  }\r\n\r\n  // separate out paths cache as a baseURL lock process\r\n  function applyPaths (baseURL, paths, key) {\r\n    var mapMatch = getMapMatch(paths, key);\r\n    if (mapMatch) {\r\n      var target = paths[mapMatch] + key.substr(mapMatch.length);\r\n\r\n      var resolved = resolveIfNotPlain(target, baseURI);\r\n      if (resolved !== undefined)\r\n        return resolved;\r\n\r\n      return baseURL + target;\r\n    }\r\n    else if (key.indexOf(':') !== -1) {\r\n      return key;\r\n    }\r\n    else {\r\n      return baseURL + key;\r\n    }\r\n  }\r\n\r\n  function checkMap (p) {\r\n    var name = this.name;\r\n    // can add ':' here if we want paths to match the behaviour of map\r\n    if (name.substr(0, p.length) === p && (name.length === p.length || name[p.length] === '/' || p[p.length - 1] === '/' || p[p.length - 1] === ':')) {\r\n      var curLen = p.split('/').length;\r\n      if (curLen > this.len) {\r\n        this.match = p;\r\n        this.len = curLen;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getMapMatch (map, name) {\r\n    if (Object.hasOwnProperty.call(map, name))\r\n      return name;\r\n\r\n    var bestMatch = {\r\n      name: name,\r\n      match: undefined,\r\n      len: 0\r\n    };\r\n\r\n    Object.keys(map).forEach(checkMap, bestMatch);\r\n\r\n    return bestMatch.match;\r\n  }\r\n\r\n  // RegEx adjusted from https://github.com/jbrantly/yabble/blob/master/lib/yabble.js#L339\r\n  var cjsRequireRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.\"'])require\\s*\\(\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|`[^`\\\\]*(?:\\\\.[^`\\\\]*)*`)\\s*\\)/g;\n\n  /*\r\n   * Source loading\r\n   */\r\n  function fetchFetch (url, authorization, integrity, asBuffer) {\r\n    // fetch doesn't support file:/// urls\r\n    if (url.substr(0, 8) === 'file:///') {\r\n      if (hasXhr)\r\n        return xhrFetch(url, authorization, integrity, asBuffer);\r\n      else\r\n        throw new Error('Unable to fetch file URLs in this environment.');\r\n    }\r\n\r\n    // percent encode just \"#\" for HTTP requests\r\n    url = url.replace(/#/g, '%23');\r\n\r\n    var opts = {\r\n      // NB deprecate\r\n      headers: { Accept: 'application/x-es-module, */*' }\r\n    };\r\n\r\n    if (integrity)\r\n      opts.integrity = integrity;\r\n\r\n    if (authorization) {\r\n      if (typeof authorization == 'string')\r\n        opts.headers['Authorization'] = authorization;\r\n      opts.credentials = 'include';\r\n    }\r\n\r\n    return fetch(url, opts)\r\n    .then(function(res) {\r\n      if (res.ok)\r\n        return asBuffer ? res.arrayBuffer() : res.text();\r\n      else\r\n        throw new Error('Fetch error: ' + res.status + ' ' + res.statusText);\r\n    });\r\n  }\r\n\r\n  function xhrFetch (url, authorization, integrity, asBuffer) {\r\n    return new Promise(function (resolve, reject) {\r\n      // percent encode just \"#\" for HTTP requests\r\n      url = url.replace(/#/g, '%23');\r\n\r\n      var xhr = new XMLHttpRequest();\r\n      if (asBuffer)\r\n        xhr.responseType = 'arraybuffer';\r\n      function load() {\r\n        resolve(asBuffer ? xhr.response : xhr.responseText);\r\n      }\r\n      function error() {\r\n        reject(new Error('XHR error: ' + (xhr.status ? ' (' + xhr.status + (xhr.statusText ? ' ' + xhr.statusText  : '') + ')' : '') + ' loading ' + url));\r\n      }\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          // in Chrome on file:/// URLs, status is 0\r\n          if (xhr.status == 0) {\r\n            if (xhr.response) {\r\n              load();\r\n            }\r\n            else {\r\n              // when responseText is empty, wait for load or error event\r\n              // to inform if it is a 404 or empty file\r\n              xhr.addEventListener('error', error);\r\n              xhr.addEventListener('load', load);\r\n            }\r\n          }\r\n          else if (xhr.status === 200) {\r\n            load();\r\n          }\r\n          else {\r\n            error();\r\n          }\r\n        }\r\n      };\r\n      xhr.open(\"GET\", url, true);\r\n\r\n      if (xhr.setRequestHeader) {\r\n        xhr.setRequestHeader('Accept', 'application/x-es-module, */*');\r\n        // can set \"authorization: true\" to enable withCredentials only\r\n        if (authorization) {\r\n          if (typeof authorization == 'string')\r\n            xhr.setRequestHeader('Authorization', authorization);\r\n          xhr.withCredentials = true;\r\n        }\r\n      }\r\n\r\n      xhr.send(null);\r\n    });\r\n  }\r\n\r\n  var fs;\r\n  function nodeFetch (url, authorization, integrity, asBuffer) {\r\n    if (url.substr(0, 8) != 'file:///') {\r\n      if (hasFetch)\r\n        return fetchFetch(url, authorization, integrity, asBuffer);\r\n      else\r\n        return Promise.reject(new Error('Unable to fetch \"' + url + '\". Only file URLs of the form file:/// supported running in Node without fetch.'));\r\n    }\r\n    \r\n    fs = fs || require('fs');\r\n    if (isWindows)\r\n      url = url.replace(/\\//g, '\\\\').substr(8);\r\n    else\r\n      url = url.substr(7);\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      fs.readFile(url, function(err, data) {\r\n        if (err) {\r\n          return reject(err);\r\n        }\r\n        else {\r\n          if (asBuffer) {\r\n            resolve(data);\r\n          }\r\n          else {\r\n            // Strip Byte Order Mark out if it's the leading char\r\n            var dataString = data + '';\r\n            if (dataString[0] === '\\ufeff')\r\n              dataString = dataString.substr(1);\r\n\r\n            resolve(dataString);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function noFetch () {\r\n    throw new Error('No fetch method is defined for this environment.');\r\n  }\r\n\r\n  var fetchFunction;\r\n\r\n  var hasXhr = typeof XMLHttpRequest !== 'undefined';\r\n  var hasFetch = typeof fetch !== 'undefined';\r\n\r\n  if (typeof self !== 'undefined' && typeof self.fetch !== 'undefined')\r\n   fetchFunction = fetchFetch;\r\n  else if (hasXhr)\r\n    fetchFunction = xhrFetch;\r\n  else if (typeof require !== 'undefined' && typeof process !== 'undefined')\r\n    fetchFunction = nodeFetch;\r\n  else\r\n    fetchFunction = noFetch;\r\n\r\n  var fetch$1 = fetchFunction;\n\n  function createMetadata () {\r\n    return {\r\n      pluginKey: undefined,\r\n      pluginArgument: undefined,\r\n      pluginModule: undefined,\r\n      packageKey: undefined,\r\n      packageConfig: undefined,\r\n      load: undefined\r\n    };\r\n  }\r\n\r\n  function getParentMetadata (loader, config, parentKey) {\r\n    var parentMetadata = createMetadata();\r\n\r\n    if (parentKey) {\r\n      // detect parent plugin\r\n      // we just need pluginKey to be truthy for package configurations\r\n      // so we duplicate it as pluginArgument - although not correct its not used\r\n      var parentPluginIndex;\r\n      if (config.pluginFirst) {\r\n        if ((parentPluginIndex = parentKey.lastIndexOf('!')) !== -1)\r\n          parentMetadata.pluginArgument = parentMetadata.pluginKey = parentKey.substr(0, parentPluginIndex);\r\n      }\r\n      else {\r\n        if ((parentPluginIndex = parentKey.indexOf('!')) !== -1)\r\n          parentMetadata.pluginArgument = parentMetadata.pluginKey = parentKey.substr(parentPluginIndex + 1);\r\n      }\r\n\r\n      // detect parent package\r\n      parentMetadata.packageKey = getMapMatch(config.packages, parentKey);\r\n      if (parentMetadata.packageKey)\r\n        parentMetadata.packageConfig = config.packages[parentMetadata.packageKey];\r\n    }\r\n\r\n    return parentMetadata;\r\n  }\r\n\r\n  function normalize (key, parentKey) {\r\n    var config = this[CONFIG];\r\n\r\n    var metadata = createMetadata();\r\n    var parentMetadata = getParentMetadata(this, config, parentKey);\r\n\r\n    var loader = this;\r\n\r\n    return Promise.resolve()\r\n\r\n    // boolean conditional\r\n    .then(function () {\r\n      // first we normalize the conditional\r\n      var booleanIndex = key.lastIndexOf('#?');\r\n\r\n      if (booleanIndex === -1)\r\n        return Promise.resolve(key);\r\n\r\n      var conditionObj = parseCondition.call(loader, key.substr(booleanIndex + 2));\r\n\r\n      // in builds, return normalized conditional\r\n      /*if (this.builder)\r\n        return this.resolve(conditionObj.module, parentKey)\r\n        .then(function (conditionModule) {\r\n          conditionObj.module = conditionModule;\r\n          return key.substr(0, booleanIndex) + '#?' + serializeCondition(conditionObj);\r\n        });*/\r\n\r\n      return resolveCondition.call(loader, conditionObj, parentKey, true)\r\n      .then(function (conditionValue) {\r\n        return conditionValue ? key.substr(0, booleanIndex) : '@empty';\r\n      });\r\n    })\r\n\r\n    // plugin\r\n    .then(function (key) {\r\n      var parsed = parsePlugin(config.pluginFirst, key);\r\n\r\n      if (!parsed)\r\n        return packageResolve.call(loader, config, key, parentMetadata && parentMetadata.pluginArgument || parentKey, metadata, parentMetadata, false);\r\n\r\n      metadata.pluginKey = parsed.plugin;\r\n\r\n      return Promise.all([\r\n        packageResolve.call(loader, config, parsed.argument, parentMetadata && parentMetadata.pluginArgument || parentKey, metadata, parentMetadata, true),\r\n        loader.resolve(parsed.plugin, parentKey)\r\n      ])\r\n      .then(function (normalized) {\r\n        metadata.pluginArgument = normalized[0];\r\n        metadata.pluginKey = normalized[1];\r\n\r\n        // don't allow a plugin to load itself\r\n        if (metadata.pluginArgument === metadata.pluginKey)\r\n          throw new Error('Plugin ' + metadata.pluginArgument + ' cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.');\r\n\r\n        return combinePluginParts(config.pluginFirst, normalized[0], normalized[1]);\r\n      });\r\n    })\r\n    .then(function (normalized) {\r\n      return interpolateConditional.call(loader, normalized, parentKey, parentMetadata);\r\n    })\r\n    .then(function (normalized) {\r\n      setMeta.call(loader, config, normalized, metadata);\r\n\r\n      if (metadata.pluginKey || !metadata.load.loader)\r\n        return normalized;\r\n\r\n      // loader by configuration\r\n      // normalizes to parent to support package loaders\r\n      return loader.resolve(metadata.load.loader, normalized)\r\n      .then(function (pluginKey) {\r\n        metadata.pluginKey = pluginKey;\r\n        metadata.pluginArgument = normalized;\r\n        return normalized;\r\n      });\r\n    })\r\n    .then(function (normalized) {\r\n      loader[METADATA][normalized] = metadata;\r\n      return normalized;\r\n    });\r\n  }\r\n\r\n  // normalization function used for registry keys\r\n  // just does coreResolve without map\r\n  function decanonicalize (config, key) {\r\n    var parsed = parsePlugin(config.pluginFirst, key);\r\n\r\n    // plugin\r\n    if (parsed) {\r\n      var pluginKey = decanonicalize.call(this, config, parsed.plugin);\r\n      return combinePluginParts(config.pluginFirst, coreResolve.call(this, config, parsed.argument, undefined, false, false), pluginKey);\r\n    }\r\n\r\n    return coreResolve.call(this, config, key, undefined, false, false);\r\n  }\r\n\r\n  function normalizeSync (key, parentKey) {\r\n    var config = this[CONFIG];\r\n\r\n    // normalizeSync is metadataless, so create metadata\r\n    var metadata = createMetadata();\r\n    var parentMetadata = parentMetadata || getParentMetadata(this, config, parentKey);\r\n\r\n    var parsed = parsePlugin(config.pluginFirst, key);\r\n\r\n    // plugin\r\n    if (parsed) {\r\n      metadata.pluginKey = normalizeSync.call(this, parsed.plugin, parentKey);\r\n      return combinePluginParts(config.pluginFirst,\r\n          packageResolveSync.call(this, config, parsed.argument, parentMetadata.pluginArgument || parentKey, metadata, parentMetadata, !!metadata.pluginKey),\r\n          metadata.pluginKey);\r\n    }\r\n\r\n    return packageResolveSync.call(this, config, key, parentMetadata.pluginArgument || parentKey, metadata, parentMetadata, !!metadata.pluginKey);\r\n  }\r\n\r\n  function coreResolve (config, key, parentKey, doMap, packageName) {\r\n    var relativeResolved = resolveIfNotPlain(key, parentKey || baseURI);\r\n\r\n    // standard URL resolution\r\n    if (relativeResolved)\r\n      return applyPaths(config.baseURL, config.paths, relativeResolved);\r\n\r\n    // plain keys not starting with './', 'x://' and '/' go through custom resolution\r\n    if (doMap) {\r\n      var mapMatch = getMapMatch(config.map, key);\r\n\r\n      if (mapMatch) {\r\n        key = config.map[mapMatch] + key.substr(mapMatch.length);\r\n\r\n        relativeResolved = resolveIfNotPlain(key, baseURI);\r\n        if (relativeResolved)\r\n          return applyPaths(config.baseURL, config.paths, relativeResolved);\r\n      }\r\n    }\r\n\r\n    if (this.registry.has(key))\r\n      return key;\r\n\r\n    if (key.substr(0, 6) === '@node/')\r\n      return key;\r\n\r\n    var trailingSlash = packageName && key[key.length - 1] !== '/';\r\n    var resolved = applyPaths(config.baseURL, config.paths, trailingSlash ? key + '/' : key);\r\n    if (trailingSlash)\r\n      return resolved.substr(0, resolved.length - 1);\r\n    return resolved;\r\n  }\r\n\r\n  function packageResolveSync (config, key, parentKey, metadata, parentMetadata, skipExtensions) {\r\n    // ignore . since internal maps handled by standard package resolution\r\n    if (parentMetadata && parentMetadata.packageConfig && key[0] !== '.') {\r\n      var parentMap = parentMetadata.packageConfig.map;\r\n      var parentMapMatch = parentMap && getMapMatch(parentMap, key);\r\n\r\n      if (parentMapMatch && typeof parentMap[parentMapMatch] === 'string') {\r\n        var mapped = doMapSync(this, config, parentMetadata.packageConfig, parentMetadata.packageKey, parentMapMatch, key, metadata, skipExtensions);\r\n        if (mapped)\r\n          return mapped;\r\n      }\r\n    }\r\n\r\n    var normalized = coreResolve.call(this, config, key, parentKey, true, true);\r\n\r\n    var pkgConfigMatch = getPackageConfigMatch(config, normalized);\r\n    metadata.packageKey = pkgConfigMatch && pkgConfigMatch.packageKey || getMapMatch(config.packages, normalized);\r\n\r\n    if (!metadata.packageKey)\r\n      return normalized;\r\n\r\n    if (config.packageConfigKeys.indexOf(normalized) !== -1) {\r\n      metadata.packageKey = undefined;\r\n      return normalized;\r\n    }\r\n\r\n    metadata.packageConfig = config.packages[metadata.packageKey] || (config.packages[metadata.packageKey] = createPackage());\r\n\r\n    var subPath = normalized.substr(metadata.packageKey.length + 1);\r\n\r\n    return applyPackageConfigSync(this, config, metadata.packageConfig, metadata.packageKey, subPath, metadata, skipExtensions);\r\n  }\r\n\r\n  function packageResolve (config, key, parentKey, metadata, parentMetadata, skipExtensions) {\r\n    var loader = this;\r\n\r\n    return resolvedPromise$1\r\n    .then(function () {\r\n      // ignore . since internal maps handled by standard package resolution\r\n      if (parentMetadata && parentMetadata.packageConfig && key.substr(0, 2) !== './') {\r\n        var parentMap = parentMetadata.packageConfig.map;\r\n        var parentMapMatch = parentMap && getMapMatch(parentMap, key);\r\n\r\n        if (parentMapMatch)\r\n          return doMap(loader, config, parentMetadata.packageConfig, parentMetadata.packageKey, parentMapMatch, key, metadata, skipExtensions);\r\n      }\r\n\r\n      return resolvedPromise$1;\r\n    })\r\n    .then(function (mapped) {\r\n      if (mapped)\r\n        return mapped;\r\n\r\n      // apply map, core, paths, contextual package map\r\n      var normalized = coreResolve.call(loader, config, key, parentKey, true, true);\r\n\r\n      var pkgConfigMatch = getPackageConfigMatch(config, normalized);\r\n      metadata.packageKey = pkgConfigMatch && pkgConfigMatch.packageKey || getMapMatch(config.packages, normalized);\r\n\r\n      if (!metadata.packageKey)\r\n        return Promise.resolve(normalized);\r\n\r\n      if (config.packageConfigKeys.indexOf(normalized) !== -1) {\r\n        metadata.packageKey = undefined;\r\n        metadata.load = createMeta();\r\n        metadata.load.format = 'json';\r\n        // ensure no loader\r\n        metadata.load.loader = '';\r\n        return Promise.resolve(normalized);\r\n      }\r\n\r\n      metadata.packageConfig = config.packages[metadata.packageKey] || (config.packages[metadata.packageKey] = createPackage());\r\n\r\n      // load configuration when it matches packageConfigPaths, not already configured, and not the config itself\r\n      var loadConfig = pkgConfigMatch && !metadata.packageConfig.configured;\r\n\r\n      return (loadConfig ? loadPackageConfigPath(loader, config, pkgConfigMatch.configPath, metadata) : resolvedPromise$1)\r\n      .then(function () {\r\n        var subPath = normalized.substr(metadata.packageKey.length + 1);\r\n\r\n        return applyPackageConfig(loader, config, metadata.packageConfig, metadata.packageKey, subPath, metadata, skipExtensions);\r\n      });\r\n    });\r\n  }\r\n\r\n  function createMeta () {\r\n    return {\r\n      extension: '',\r\n      deps: undefined,\r\n      format: undefined,\r\n      loader: undefined,\r\n      scriptLoad: undefined,\r\n      globals: undefined,\r\n      nonce: undefined,\r\n      integrity: undefined,\r\n      sourceMap: undefined,\r\n      exports: undefined,\r\n      encapsulateGlobal: false,\r\n      crossOrigin: undefined,\r\n      cjsRequireDetection: true,\r\n      cjsDeferDepsExecute: false,\r\n      esModule: false\r\n    };\r\n  }\r\n\r\n  function setMeta (config, key, metadata) {\r\n    metadata.load = metadata.load || createMeta();\r\n\r\n    // apply wildcard metas\r\n    var bestDepth = 0;\r\n    var wildcardIndex;\r\n    for (var module in config.meta) {\r\n      wildcardIndex = module.indexOf('*');\r\n      if (wildcardIndex === -1)\r\n        continue;\r\n      if (module.substr(0, wildcardIndex) === key.substr(0, wildcardIndex)\r\n          && module.substr(wildcardIndex + 1) === key.substr(key.length - module.length + wildcardIndex + 1)) {\r\n        var depth = module.split('/').length;\r\n        if (depth > bestDepth)\r\n          bestDepth = depth;\r\n        extendMeta(metadata.load, config.meta[module], bestDepth !== depth);\r\n      }\r\n    }\r\n\r\n    // apply exact meta\r\n    if (config.meta[key])\r\n      extendMeta(metadata.load, config.meta[key], false);\r\n\r\n    // apply package meta\r\n    if (metadata.packageKey) {\r\n      var subPath = key.substr(metadata.packageKey.length + 1);\r\n\r\n      var meta = {};\r\n      if (metadata.packageConfig.meta) {\r\n        var bestDepth = 0;\r\n        getMetaMatches(metadata.packageConfig.meta, subPath, function (metaPattern, matchMeta, matchDepth) {\r\n          if (matchDepth > bestDepth)\r\n            bestDepth = matchDepth;\r\n          extendMeta(meta, matchMeta, matchDepth && bestDepth > matchDepth);\r\n        });\r\n\r\n        extendMeta(metadata.load, meta, false);\r\n      }\r\n\r\n      // format\r\n      if (metadata.packageConfig.format && !metadata.pluginKey && !metadata.load.loader)\r\n        metadata.load.format = metadata.load.format || metadata.packageConfig.format;\r\n    }\r\n  }\r\n\r\n  function parsePlugin (pluginFirst, key) {\r\n    var argumentKey;\r\n    var pluginKey;\r\n\r\n    var pluginIndex = pluginFirst ? key.indexOf('!') : key.lastIndexOf('!');\r\n\r\n    if (pluginIndex === -1)\r\n      return;\r\n\r\n    if (pluginFirst) {\r\n      argumentKey = key.substr(pluginIndex + 1);\r\n      pluginKey = key.substr(0, pluginIndex);\r\n    }\r\n    else {\r\n      argumentKey = key.substr(0, pluginIndex);\r\n      pluginKey = key.substr(pluginIndex + 1) || argumentKey.substr(argumentKey.lastIndexOf('.') + 1);\r\n    }\r\n\r\n    return {\r\n      argument: argumentKey,\r\n      plugin: pluginKey\r\n    };\r\n  }\r\n\r\n  // put key back together after parts have been normalized\r\n  function combinePluginParts (pluginFirst, argumentKey, pluginKey) {\r\n    if (pluginFirst)\r\n      return pluginKey + '!' + argumentKey;\r\n    else\r\n      return argumentKey + '!' + pluginKey;\r\n  }\r\n\r\n  /*\r\n   * Package Configuration Extension\r\n   *\r\n   * Example:\r\n   *\r\n   * SystemJS.packages = {\r\n   *   jquery: {\r\n   *     main: 'index.js', // when not set, package key is requested directly\r\n   *     format: 'amd',\r\n   *     defaultExtension: 'ts', // defaults to 'js', can be set to false\r\n   *     modules: {\r\n   *       '*.ts': {\r\n   *         loader: 'typescript'\r\n   *       },\r\n   *       'vendor/sizzle.js': {\r\n   *         format: 'global'\r\n   *       }\r\n   *     },\r\n   *     map: {\r\n   *        // map internal require('sizzle') to local require('./vendor/sizzle')\r\n   *        sizzle: './vendor/sizzle.js',\r\n   *        // map any internal or external require of 'jquery/vendor/another' to 'another/index.js'\r\n   *        './vendor/another.js': './another/index.js',\r\n   *        // test.js / test -> lib/test.js\r\n   *        './test.js': './lib/test.js',\r\n   *\r\n   *        // environment-specific map configurations\r\n   *        './index.js': {\r\n   *          '~browser': './index-node.js',\r\n   *          './custom-condition.js|~export': './index-custom.js'\r\n   *        }\r\n   *     },\r\n   *     // allows for setting package-prefixed depCache\r\n   *     // keys are normalized module keys relative to the package itself\r\n   *     depCache: {\r\n   *       // import 'package/index.js' loads in parallel package/lib/test.js,package/vendor/sizzle.js\r\n   *       './index.js': ['./test'],\r\n   *       './test.js': ['external-dep'],\r\n   *       'external-dep/path.js': ['./another.js']\r\n   *     }\r\n   *   }\r\n   * };\r\n   *\r\n   * Then:\r\n   *   import 'jquery'                       -> jquery/index.js\r\n   *   import 'jquery/submodule'             -> jquery/submodule.js\r\n   *   import 'jquery/submodule.ts'          -> jquery/submodule.ts loaded as typescript\r\n   *   import 'jquery/vendor/another'        -> another/index.js\r\n   *\r\n   * Detailed Behaviours\r\n   * - main can have a leading \"./\" can be added optionally\r\n   * - map and defaultExtension are applied to the main\r\n   * - defaultExtension adds the extension only if the exact extension is not present\r\n\r\n   * - if a meta value is available for a module, map and defaultExtension are skipped\r\n   * - like global map, package map also applies to subpaths (sizzle/x, ./vendor/another/sub)\r\n   * - condition module map is '@env' module in package or '@system-env' globally\r\n   * - map targets support conditional interpolation ('./x': './x.#{|env}.js')\r\n   * - internal package map targets cannot use boolean conditionals\r\n   *\r\n   * Package Configuration Loading\r\n   *\r\n   * Not all packages may already have their configuration present in the System config\r\n   * For these cases, a list of packageConfigPaths can be provided, which when matched against\r\n   * a request, will first request a \".json\" file by the package key to derive the package\r\n   * configuration from. This allows dynamic loading of non-predetermined code, a key use\r\n   * case in SystemJS.\r\n   *\r\n   * Example:\r\n   *\r\n   *   SystemJS.packageConfigPaths = ['packages/test/package.json', 'packages/*.json'];\r\n   *\r\n   *   // will first request 'packages/new-package/package.json' for the package config\r\n   *   // before completing the package request to 'packages/new-package/path'\r\n   *   SystemJS.import('packages/new-package/path');\r\n   *\r\n   *   // will first request 'packages/test/package.json' before the main\r\n   *   SystemJS.import('packages/test');\r\n   *\r\n   * When a package matches packageConfigPaths, it will always send a config request for\r\n   * the package configuration.\r\n   * The package key itself is taken to be the match up to and including the last wildcard\r\n   * or trailing slash.\r\n   * The most specific package config path will be used.\r\n   * Any existing package configurations for the package will deeply merge with the\r\n   * package config, with the existing package configurations taking preference.\r\n   * To opt-out of the package configuration request for a package that matches\r\n   * packageConfigPaths, use the { configured: true } package config option.\r\n   *\r\n   */\r\n\r\n  function addDefaultExtension (config, pkg, pkgKey, subPath, skipExtensions) {\r\n    // don't apply extensions to folders or if defaultExtension = false\r\n    if (!subPath || !pkg.defaultExtension || subPath[subPath.length - 1] === '/' || skipExtensions)\r\n      return subPath;\r\n\r\n    var metaMatch = false;\r\n\r\n    // exact meta or meta with any content after the last wildcard skips extension\r\n    if (pkg.meta)\r\n      getMetaMatches(pkg.meta, subPath, function (metaPattern, matchMeta, matchDepth) {\r\n        if (matchDepth === 0 || metaPattern.lastIndexOf('*') !== metaPattern.length - 1)\r\n          return metaMatch = true;\r\n      });\r\n\r\n    // exact global meta or meta with any content after the last wildcard skips extension\r\n    if (!metaMatch && config.meta)\r\n      getMetaMatches(config.meta, pkgKey + '/' + subPath, function (metaPattern, matchMeta, matchDepth) {\r\n        if (matchDepth === 0 || metaPattern.lastIndexOf('*') !== metaPattern.length - 1)\r\n          return metaMatch = true;\r\n      });\r\n\r\n    if (metaMatch)\r\n      return subPath;\r\n\r\n    // work out what the defaultExtension is and add if not there already\r\n    var defaultExtension = '.' + pkg.defaultExtension;\r\n    if (subPath.substr(subPath.length - defaultExtension.length) !== defaultExtension)\r\n      return subPath + defaultExtension;\r\n    else\r\n      return subPath;\r\n  }\r\n\r\n  function applyPackageConfigSync (loader, config, pkg, pkgKey, subPath, metadata, skipExtensions) {\r\n    // main\r\n    if (!subPath) {\r\n      if (pkg.main)\r\n        subPath = pkg.main.substr(0, 2) === './' ? pkg.main.substr(2) : pkg.main;\r\n      else\r\n        // also no submap if key is package itself (import 'pkg' -> 'path/to/pkg.js')\r\n        // NB can add a default package main convention here\r\n        // if it becomes internal to the package then it would no longer be an exit path\r\n        return pkgKey;\r\n    }\r\n\r\n    // map config checking without then with extensions\r\n    if (pkg.map) {\r\n      var mapPath = './' + subPath;\r\n\r\n      var mapMatch = getMapMatch(pkg.map, mapPath);\r\n\r\n      // we then check map with the default extension adding\r\n      if (!mapMatch) {\r\n        mapPath = './' + addDefaultExtension(config, pkg, pkgKey, subPath, skipExtensions);\r\n        if (mapPath !== './' + subPath)\r\n          mapMatch = getMapMatch(pkg.map, mapPath);\r\n      }\r\n      if (mapMatch) {\r\n        var mapped = doMapSync(loader, config, pkg, pkgKey, mapMatch, mapPath, metadata, skipExtensions);\r\n        if (mapped)\r\n          return mapped;\r\n      }\r\n    }\r\n\r\n    // normal package resolution\r\n    return pkgKey + '/' + addDefaultExtension(config, pkg, pkgKey, subPath, skipExtensions);\r\n  }\r\n\r\n  function validMapping (mapMatch, mapped, path) {\r\n    // allow internal ./x -> ./x/y or ./x/ -> ./x/y recursive maps\r\n    // but only if the path is exactly ./x and not ./x/z\r\n    if (mapped.substr(0, mapMatch.length) === mapMatch && path.length > mapMatch.length)\r\n      return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  function doMapSync (loader, config, pkg, pkgKey, mapMatch, path, metadata, skipExtensions) {\r\n    if (path[path.length - 1] === '/')\r\n      path = path.substr(0, path.length - 1);\r\n    var mapped = pkg.map[mapMatch];\r\n\r\n    if (typeof mapped === 'object')\r\n      throw new Error('Synchronous conditional normalization not supported sync normalizing ' + mapMatch + ' in ' + pkgKey);\r\n\r\n    if (!validMapping(mapMatch, mapped, path) || typeof mapped !== 'string')\r\n      return;\r\n\r\n    return packageResolveSync.call(loader, config, mapped + path.substr(mapMatch.length), pkgKey + '/', metadata, metadata, skipExtensions);\r\n  }\r\n\r\n  function applyPackageConfig (loader, config, pkg, pkgKey, subPath, metadata, skipExtensions) {\r\n    // main\r\n    if (!subPath) {\r\n      if (pkg.main)\r\n        subPath = pkg.main.substr(0, 2) === './' ? pkg.main.substr(2) : pkg.main;\r\n      // also no submap if key is package itself (import 'pkg' -> 'path/to/pkg.js')\r\n      else\r\n        // NB can add a default package main convention here\r\n        // if it becomes internal to the package then it would no longer be an exit path\r\n        return Promise.resolve(pkgKey);\r\n    }\r\n\r\n    // map config checking without then with extensions\r\n    var mapPath, mapMatch;\r\n\r\n    if (pkg.map) {\r\n      mapPath = './' + subPath;\r\n      mapMatch = getMapMatch(pkg.map, mapPath);\r\n\r\n      // we then check map with the default extension adding\r\n      if (!mapMatch) {\r\n        mapPath = './' + addDefaultExtension(config, pkg, pkgKey, subPath, skipExtensions);\r\n        if (mapPath !== './' + subPath)\r\n          mapMatch = getMapMatch(pkg.map, mapPath);\r\n      }\r\n    }\r\n\r\n    return (mapMatch ? doMap(loader, config, pkg, pkgKey, mapMatch, mapPath, metadata, skipExtensions) : resolvedPromise$1)\r\n    .then(function (mapped) {\r\n      if (mapped)\r\n        return Promise.resolve(mapped);\r\n\r\n      // normal package resolution / fallback resolution for no conditional match\r\n      return Promise.resolve(pkgKey + '/' + addDefaultExtension(config, pkg, pkgKey, subPath, skipExtensions));\r\n    });\r\n  }\r\n\r\n  function doMap (loader, config, pkg, pkgKey, mapMatch, path, metadata, skipExtensions) {\r\n    if (path[path.length - 1] === '/')\r\n      path = path.substr(0, path.length - 1);\r\n\r\n    var mapped = pkg.map[mapMatch];\r\n\r\n    if (typeof mapped === 'string') {\r\n      if (!validMapping(mapMatch, mapped, path))\r\n        return resolvedPromise$1;\r\n      return packageResolve.call(loader, config, mapped + path.substr(mapMatch.length), pkgKey + '/', metadata, metadata, skipExtensions)\r\n      .then(function (normalized) {\r\n        return interpolateConditional.call(loader, normalized, pkgKey + '/', metadata);\r\n      });\r\n    }\r\n\r\n    // we use a special conditional syntax to allow the builder to handle conditional branch points further\r\n    /*if (loader.builder)\r\n      return Promise.resolve(pkgKey + '/#:' + path);*/\r\n\r\n    // we load all conditions upfront\r\n    var conditionPromises = [];\r\n    var conditions = [];\r\n    for (var e in mapped) {\r\n      var c = parseCondition(e);\r\n      conditions.push({\r\n        condition: c,\r\n        map: mapped[e]\r\n      });\r\n      conditionPromises.push(RegisterLoader.prototype.import.call(loader, c.module, pkgKey));\r\n    }\r\n\r\n    // map object -> conditional map\r\n    return Promise.all(conditionPromises)\r\n    .then(function (conditionValues) {\r\n      // first map condition to match is used\r\n      for (var i = 0; i < conditions.length; i++) {\r\n        var c = conditions[i].condition;\r\n        var value = readMemberExpression(c.prop, '__useDefault' in conditionValues[i] ? conditionValues[i].__useDefault : conditionValues[i]);\r\n        if (!c.negate && value || c.negate && !value)\r\n          return conditions[i].map;\r\n      }\r\n    })\r\n    .then(function (mapped) {\r\n      if (mapped) {\r\n        if (!validMapping(mapMatch, mapped, path))\r\n          return resolvedPromise$1;\r\n        return packageResolve.call(loader, config, mapped + path.substr(mapMatch.length), pkgKey + '/', metadata, metadata, skipExtensions)\r\n        .then(function (normalized) {\r\n          return interpolateConditional.call(loader, normalized, pkgKey + '/', metadata);\r\n        });\r\n      }\r\n\r\n      // no environment match -> fallback to original subPath by returning undefined\r\n    });\r\n  }\r\n\r\n  // check if the given normalized key matches a packageConfigPath\r\n  // if so, loads the config\r\n  var packageConfigPaths = {};\r\n\r\n  // data object for quick checks against package paths\r\n  function createPkgConfigPathObj (path) {\r\n    var lastWildcard = path.lastIndexOf('*');\r\n    var length = Math.max(lastWildcard + 1, path.lastIndexOf('/'));\r\n    return {\r\n      length: length,\r\n      regEx: new RegExp('^(' + path.substr(0, length).replace(/[.+?^${}()|[\\]\\\\]/g, '\\\\$&').replace(/\\*/g, '[^\\\\/]+') + ')(\\\\/|$)'),\r\n      wildcard: lastWildcard !== -1\r\n    };\r\n  }\r\n\r\n  // most specific match wins\r\n  function getPackageConfigMatch (config, normalized) {\r\n    var pkgKey, exactMatch = false, configPath;\r\n    for (var i = 0; i < config.packageConfigPaths.length; i++) {\r\n      var packageConfigPath = config.packageConfigPaths[i];\r\n      var p = packageConfigPaths[packageConfigPath] || (packageConfigPaths[packageConfigPath] = createPkgConfigPathObj(packageConfigPath));\r\n      if (normalized.length < p.length)\r\n        continue;\r\n      var match = normalized.match(p.regEx);\r\n      if (match && (!pkgKey || (!(exactMatch && p.wildcard) && pkgKey.length < match[1].length))) {\r\n        pkgKey = match[1];\r\n        exactMatch = !p.wildcard;\r\n        configPath = pkgKey + packageConfigPath.substr(p.length);\r\n      }\r\n    }\r\n\r\n    if (!pkgKey)\r\n      return;\r\n\r\n    return {\r\n      packageKey: pkgKey,\r\n      configPath: configPath\r\n    };\r\n  }\r\n\r\n  function loadPackageConfigPath (loader, config, pkgConfigPath, metadata, normalized) {\r\n    var configLoader = loader.pluginLoader || loader;\r\n\r\n    // ensure we note this is a package config file path\r\n    // it will then be skipped from getting other normalizations itself to ensure idempotency\r\n    if (config.packageConfigKeys.indexOf(pkgConfigPath) === -1)\r\n      config.packageConfigKeys.push(pkgConfigPath);\r\n\r\n    return configLoader.import(pkgConfigPath)\r\n    .then(function (pkgConfig) {\r\n      setPkgConfig(metadata.packageConfig, pkgConfig, metadata.packageKey, true, config);\r\n      metadata.packageConfig.configured = true;\r\n    })\r\n    .catch(function (err) {\r\n      throw LoaderError__Check_error_message_for_loader_stack(err, 'Unable to fetch package configuration file ' + pkgConfigPath);\r\n    });\r\n  }\r\n\r\n  function getMetaMatches (pkgMeta, subPath, matchFn) {\r\n    // wildcard meta\r\n    var wildcardIndex;\r\n    for (var module in pkgMeta) {\r\n      // allow meta to start with ./ for flexibility\r\n      var dotRel = module.substr(0, 2) === './' ? './' : '';\r\n      if (dotRel)\r\n        module = module.substr(2);\r\n\r\n      wildcardIndex = module.indexOf('*');\r\n      if (wildcardIndex === -1)\r\n        continue;\r\n\r\n      if (module.substr(0, wildcardIndex) === subPath.substr(0, wildcardIndex)\r\n          && module.substr(wildcardIndex + 1) === subPath.substr(subPath.length - module.length + wildcardIndex + 1)) {\r\n        // alow match function to return true for an exit path\r\n        if (matchFn(module, pkgMeta[dotRel + module], module.split('/').length))\r\n          return;\r\n      }\r\n    }\r\n    // exact meta\r\n    var exactMeta = pkgMeta[subPath] && Object.hasOwnProperty.call(pkgMeta, subPath) ? pkgMeta[subPath] : pkgMeta['./' + subPath];\r\n    if (exactMeta)\r\n      matchFn(exactMeta, exactMeta, 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Conditions Extension\r\n   *\r\n   *   Allows a condition module to alter the resolution of an import via syntax:\r\n   *\r\n   *     import $ from 'jquery/#{browser}';\r\n   *\r\n   *   Will first load the module 'browser' via `SystemJS.import('browser')` and\r\n   *   take the default export of that module.\r\n   *   If the default export is not a string, an error is thrown.\r\n   *\r\n   *   We then substitute the string into the require to get the conditional resolution\r\n   *   enabling environment-specific variations like:\r\n   *\r\n   *     import $ from 'jquery/ie'\r\n   *     import $ from 'jquery/firefox'\r\n   *     import $ from 'jquery/chrome'\r\n   *     import $ from 'jquery/safari'\r\n   *\r\n   *   It can be useful for a condition module to define multiple conditions.\r\n   *   This can be done via the `|` modifier to specify an export member expression:\r\n   *\r\n   *     import 'jquery/#{./browser.js|grade.version}'\r\n   *\r\n   *   Where the `grade` export `version` member in the `browser.js` module  is substituted.\r\n   *\r\n   *\r\n   * Boolean Conditionals\r\n   *\r\n   *   For polyfill modules, that are used as imports but have no module value,\r\n   *   a binary conditional allows a module not to be loaded at all if not needed:\r\n   *\r\n   *     import 'es5-shim#?./conditions.js|needs-es5shim'\r\n   *\r\n   *   These conditions can also be negated via:\r\n   *\r\n   *     import 'es5-shim#?./conditions.js|~es6'\r\n   *\r\n   */\r\n\r\n  var sysConditions = ['browser', 'node', 'dev', 'build', 'production', 'default'];\r\n\r\n  function parseCondition (condition) {\r\n    var conditionExport, conditionModule, negation;\r\n\r\n    var negation;\r\n    var conditionExportIndex = condition.lastIndexOf('|');\r\n    if (conditionExportIndex !== -1) {\r\n      conditionExport = condition.substr(conditionExportIndex + 1);\r\n      conditionModule = condition.substr(0, conditionExportIndex);\r\n\r\n      if (conditionExport[0] === '~') {\r\n        negation = true;\r\n        conditionExport = conditionExport.substr(1);\r\n      }\r\n    }\r\n    else {\r\n      negation = condition[0] === '~';\r\n      conditionExport = 'default';\r\n      conditionModule = condition.substr(negation);\r\n      if (sysConditions.indexOf(conditionModule) !== -1) {\r\n        conditionExport = conditionModule;\r\n        conditionModule = null;\r\n      }\r\n    }\r\n\r\n    return {\r\n      module: conditionModule || '@system-env',\r\n      prop: conditionExport,\r\n      negate: negation\r\n    };\r\n  }\r\n\r\n  function resolveCondition (conditionObj, parentKey, bool) {\r\n    // import without __useDefault handling here\r\n    return RegisterLoader.prototype.import.call(this, conditionObj.module, parentKey)\r\n    .then(function (condition) {\r\n      var m = readMemberExpression(conditionObj.prop, condition);\r\n\r\n      if (bool && typeof m !== 'boolean')\r\n        throw new TypeError('Condition did not resolve to a boolean.');\r\n\r\n      return conditionObj.negate ? !m : m;\r\n    });\r\n  }\r\n\r\n  var interpolationRegEx = /#\\{[^\\}]+\\}/;\r\n  function interpolateConditional (key, parentKey, parentMetadata) {\r\n    // first we normalize the conditional\r\n    var conditionalMatch = key.match(interpolationRegEx);\r\n\r\n    if (!conditionalMatch)\r\n      return Promise.resolve(key);\r\n\r\n    var conditionObj = parseCondition.call(this, conditionalMatch[0].substr(2, conditionalMatch[0].length - 3));\r\n\r\n    // in builds, return normalized conditional\r\n    /*if (this.builder)\r\n      return this.normalize(conditionObj.module, parentKey, createMetadata(), parentMetadata)\r\n      .then(function (conditionModule) {\r\n        conditionObj.module = conditionModule;\r\n        return key.replace(interpolationRegEx, '#{' + serializeCondition(conditionObj) + '}');\r\n      });*/\r\n\r\n    return resolveCondition.call(this, conditionObj, parentKey, false)\r\n    .then(function (conditionValue) {\r\n      if (typeof conditionValue !== 'string')\r\n        throw new TypeError('The condition value for ' + key + ' doesn\\'t resolve to a string.');\r\n\r\n      if (conditionValue.indexOf('/') !== -1)\r\n        throw new TypeError('Unabled to interpolate conditional ' + key + (parentKey ? ' in ' + parentKey : '') + '\\n\\tThe condition value ' + conditionValue + ' cannot contain a \"/\" separator.');\r\n\r\n      return key.replace(interpolationRegEx, conditionValue);\r\n    });\r\n  }\n\n  /*\r\n   Extend config merging one deep only\r\n\r\n    loader.config({\r\n      some: 'random',\r\n      config: 'here',\r\n      deep: {\r\n        config: { too: 'too' }\r\n      }\r\n    });\r\n\r\n    <=>\r\n\r\n    loader.some = 'random';\r\n    loader.config = 'here'\r\n    loader.deep = loader.deep || {};\r\n    loader.deep.config = { too: 'too' };\r\n\r\n\r\n    Normalizes meta and package configs allowing for:\r\n\r\n    SystemJS.config({\r\n      meta: {\r\n        './index.js': {}\r\n      }\r\n    });\r\n\r\n    To become\r\n\r\n    SystemJS.meta['https://thissite.com/index.js'] = {};\r\n\r\n    For easy normalization canonicalization with latest URL support.\r\n\r\n  */\r\n  var envConfigNames = ['browserConfig', 'nodeConfig', 'devConfig', 'buildConfig', 'productionConfig'];\r\n  function envSet(loader, cfg, envCallback) {\r\n    for (var i = 0; i < envConfigNames.length; i++) {\r\n      var envConfig = envConfigNames[i];\r\n      if (cfg[envConfig] && envModule[envConfig.substr(0, envConfig.length - 6)])\r\n        envCallback(cfg[envConfig]);\r\n    }\r\n  }\r\n\r\n  function cloneObj (obj, maxDepth) {\r\n    var clone = {};\r\n    for (var p in obj) {\r\n      var prop = obj[p];\r\n      if (maxDepth > 1) {\r\n        if (prop instanceof Array)\r\n          clone[p] = [].concat(prop);\r\n        else if (typeof prop === 'object')\r\n          clone[p] = cloneObj(prop, maxDepth - 1);\r\n        else if (p !== 'packageConfig')\r\n          clone[p] = prop;\r\n      }\r\n      else {\r\n        clone[p] = prop;\r\n      }\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  function getConfigItem (config, p) {\r\n    var cfgItem = config[p];\r\n\r\n    // getConfig must return an unmodifiable clone of the configuration\r\n    if (cfgItem instanceof Array)\r\n      return config[p].concat([]);\r\n    else if (typeof cfgItem === 'object')\r\n      return cloneObj(cfgItem, 3)\r\n    else\r\n      return config[p];\r\n  }\r\n\r\n  function getConfig (configName) {\r\n    if (configName) {\r\n      if (configNames.indexOf(configName) !== -1)\r\n        return getConfigItem(this[CONFIG], configName);\r\n      throw new Error('\"' + configName + '\" is not a valid configuration name. Must be one of ' + configNames.join(', ') + '.');\r\n    }\r\n\r\n    var cfg = {};\r\n    for (var i = 0; i < configNames.length; i++) {\r\n      var p = configNames[i];\r\n      var configItem = getConfigItem(this[CONFIG], p);\r\n      if (configItem !== undefined)\r\n        cfg[p] = configItem;\r\n    }\r\n    return cfg;\r\n  }\r\n\r\n  function setConfig (cfg, isEnvConfig) {\r\n    var loader = this;\r\n    var config = this[CONFIG];\r\n\r\n    if ('warnings' in cfg)\r\n      config.warnings = cfg.warnings;\r\n\r\n    if ('wasm' in cfg)\r\n      config.wasm = typeof WebAssembly !== 'undefined' && cfg.wasm;\r\n\r\n    if ('production' in cfg || 'build' in cfg)\r\n      setProduction.call(loader, !!cfg.production, !!(cfg.build || envModule && envModule.build));\r\n\r\n    if (!isEnvConfig) {\r\n      // if using nodeConfig / browserConfig / productionConfig, take baseURL from there\r\n      // these exceptions will be unnecessary when we can properly implement config queuings\r\n      var baseURL;\r\n      envSet(loader, cfg, function(cfg) {\r\n        baseURL = baseURL || cfg.baseURL;\r\n      });\r\n      baseURL = baseURL || cfg.baseURL;\r\n\r\n      // always configure baseURL first\r\n      if (baseURL) {\r\n        config.baseURL = resolveIfNotPlain(baseURL, baseURI) || resolveIfNotPlain('./' + baseURL, baseURI);\r\n        if (config.baseURL[config.baseURL.length - 1] !== '/')\r\n          config.baseURL += '/';\r\n      }\r\n\r\n      if (cfg.paths)\r\n        extend(config.paths, cfg.paths);\r\n\r\n      envSet(loader, cfg, function(cfg) {\r\n        if (cfg.paths)\r\n          extend(config.paths, cfg.paths);\r\n      });\r\n\r\n      for (var p in config.paths) {\r\n        if (config.paths[p].indexOf('*') === -1)\r\n          continue;\r\n        warn.call(config, 'Path config ' + p + ' -> ' + config.paths[p] + ' is no longer supported as wildcards are deprecated.');\r\n        delete config.paths[p];\r\n      }\r\n    }\r\n\r\n    if (cfg.defaultJSExtensions)\r\n      warn.call(config, 'The defaultJSExtensions configuration option is deprecated.\\n  Use packages defaultExtension instead.', true);\r\n\r\n    if (typeof cfg.pluginFirst === 'boolean')\r\n      config.pluginFirst = cfg.pluginFirst;\r\n\r\n    if (cfg.map) {\r\n      for (var p in cfg.map) {\r\n        var v = cfg.map[p];\r\n\r\n        if (typeof v === 'string') {\r\n          var mapped = coreResolve.call(loader, config, v, undefined, false, false);\r\n          if (mapped[mapped.length -1] === '/' && p[p.length - 1] !== ':' && p[p.length - 1] !== '/')\r\n            mapped = mapped.substr(0, mapped.length - 1);\r\n          config.map[p] = mapped;\r\n        }\r\n\r\n        // object map\r\n        else {\r\n          var pkgName = coreResolve.call(loader, config, p[p.length - 1] !== '/' ? p + '/' : p, undefined, true, true);\r\n          pkgName = pkgName.substr(0, pkgName.length - 1);\r\n\r\n          var pkg = config.packages[pkgName];\r\n          if (!pkg) {\r\n            pkg = config.packages[pkgName] = createPackage();\r\n            // use '' instead of false to keep type consistent\r\n            pkg.defaultExtension = '';\r\n          }\r\n          setPkgConfig(pkg, { map: v }, pkgName, false, config);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (cfg.packageConfigPaths) {\r\n      var packageConfigPaths = [];\r\n      for (var i = 0; i < cfg.packageConfigPaths.length; i++) {\r\n        var path = cfg.packageConfigPaths[i];\r\n        var packageLength = Math.max(path.lastIndexOf('*') + 1, path.lastIndexOf('/'));\r\n        var normalized = coreResolve.call(loader, config, path.substr(0, packageLength), undefined, false, false);\r\n        packageConfigPaths[i] = normalized + path.substr(packageLength);\r\n      }\r\n      config.packageConfigPaths = packageConfigPaths;\r\n    }\r\n\r\n    if (cfg.bundles) {\r\n      for (var p in cfg.bundles) {\r\n        var bundle = [];\r\n        for (var i = 0; i < cfg.bundles[p].length; i++)\r\n          bundle.push(loader.normalizeSync(cfg.bundles[p][i]));\r\n        config.bundles[p] = bundle;\r\n      }\r\n    }\r\n\r\n    if (cfg.packages) {\r\n      for (var p in cfg.packages) {\r\n        if (p.match(/^([^\\/]+:)?\\/\\/$/))\r\n          throw new TypeError('\"' + p + '\" is not a valid package name.');\r\n\r\n        var pkgName = coreResolve.call(loader, config, p[p.length - 1] !== '/' ? p + '/' : p, undefined, true, true);\r\n        pkgName = pkgName.substr(0, pkgName.length - 1);\r\n\r\n        setPkgConfig(config.packages[pkgName] = config.packages[pkgName] || createPackage(), cfg.packages[p], pkgName, false, config);\r\n      }\r\n    }\r\n\r\n    if (cfg.depCache) {\r\n      for (var p in cfg.depCache)\r\n        config.depCache[loader.normalizeSync(p)] = [].concat(cfg.depCache[p]);\r\n    }\r\n\r\n    if (cfg.meta) {\r\n      for (var p in cfg.meta) {\r\n        // base wildcard stays base\r\n        if (p[0] === '*') {\r\n          extend(config.meta[p] = config.meta[p] || {}, cfg.meta[p]);\r\n        }\r\n        else {\r\n          var resolved = coreResolve.call(loader, config, p, undefined, true, true);\r\n          extend(config.meta[resolved] = config.meta[resolved] || {}, cfg.meta[p]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if ('transpiler' in cfg)\r\n      config.transpiler = cfg.transpiler;\r\n\r\n\r\n    // copy any remaining non-standard configuration properties\r\n    for (var c in cfg) {\r\n      if (configNames.indexOf(c) !== -1)\r\n        continue;\r\n      if (envConfigNames.indexOf(c) !== -1)\r\n        continue;\r\n\r\n      // warn.call(config, 'Setting custom config option `System.config({ ' + c + ': ... })` is deprecated. Avoid custom config options or set SystemJS.' + c + ' = ... directly.');\r\n      loader[c] = cfg[c];\r\n    }\r\n\r\n    envSet(loader, cfg, function(cfg) {\r\n      loader.config(cfg, true);\r\n    });\r\n  }\r\n\r\n  function createPackage () {\r\n    return {\r\n      defaultExtension: undefined,\r\n      main: undefined,\r\n      format: undefined,\r\n      meta: undefined,\r\n      map: undefined,\r\n      packageConfig: undefined,\r\n      configured: false\r\n    };\r\n  }\r\n\r\n  // deeply-merge (to first level) config with any existing package config\r\n  function setPkgConfig (pkg, cfg, pkgName, prependConfig, config) {\r\n    for (var prop in cfg) {\r\n      if (prop === 'main' || prop === 'format' || prop === 'defaultExtension' || prop === 'configured') {\r\n        if (!prependConfig || pkg[prop] === undefined)\r\n          pkg[prop] = cfg[prop];\r\n      }\r\n      else if (prop === 'map') {\r\n        (prependConfig ? prepend : extend)(pkg.map = pkg.map || {}, cfg.map);\r\n      }\r\n      else if (prop === 'meta') {\r\n        (prependConfig ? prepend : extend)(pkg.meta = pkg.meta || {}, cfg.meta);\r\n      }\r\n      else if (Object.hasOwnProperty.call(cfg, prop)) {\r\n        warn.call(config, '\"' + prop + '\" is not a valid package configuration option in package ' + pkgName);\r\n      }\r\n    }\r\n\r\n    // default defaultExtension for packages only\r\n    if (pkg.defaultExtension === undefined)\r\n      pkg.defaultExtension = 'js';\r\n\r\n    if (pkg.main === undefined && pkg.map && pkg.map['.']) {\r\n      pkg.main = pkg.map['.'];\r\n      delete pkg.map['.'];\r\n    }\r\n    // main object becomes main map\r\n    else if (typeof pkg.main === 'object') {\r\n      pkg.map = pkg.map || {};\r\n      pkg.map['./@main'] = pkg.main;\r\n      pkg.main['default'] = pkg.main['default'] || './';\r\n      pkg.main = '@main';\r\n    }\r\n\r\n    return pkg;\r\n  }\n\n  var hasBuffer = typeof Buffer !== 'undefined';\r\n  try {\r\n    if (hasBuffer && new Buffer('a').toString('base64') !== 'YQ==')\r\n      hasBuffer = false;\r\n  }\r\n  catch (e) {\r\n    hasBuffer = false;\r\n  }\r\n\r\n  var sourceMapPrefix = '\\n//# sourceMapping' + 'URL=data:application/json;base64,';\r\n  function inlineSourceMap (sourceMapString) {\r\n    if (hasBuffer)\r\n      return sourceMapPrefix + new Buffer(sourceMapString).toString('base64');\r\n    else if (typeof btoa !== 'undefined')\r\n      return sourceMapPrefix + btoa(unescape(encodeURIComponent(sourceMapString)));\r\n    else\r\n      return '';\r\n  }\r\n\r\n  function getSource(source, sourceMap, address, wrap) {\r\n    var lastLineIndex = source.lastIndexOf('\\n');\r\n\r\n    if (sourceMap) {\r\n      if (typeof sourceMap != 'object')\r\n        throw new TypeError('load.metadata.sourceMap must be set to an object.');\r\n\r\n      sourceMap = JSON.stringify(sourceMap);\r\n    }\r\n\r\n    return (wrap ? '(function(System, SystemJS) {' : '') + source + (wrap ? '\\n})(System, System);' : '')\r\n        // adds the sourceURL comment if not already present\r\n        + (source.substr(lastLineIndex, 15) != '\\n//# sourceURL='\r\n          ? '\\n//# sourceURL=' + address + (sourceMap ? '!transpiled' : '') : '')\r\n        // add sourceMappingURL if load.metadata.sourceMap is set\r\n        + (sourceMap && inlineSourceMap(sourceMap) || '');\r\n  }\r\n\r\n  // script execution via injecting a script tag into the page\r\n  // this allows CSP nonce to be set for CSP environments\r\n  var head;\r\n  function scriptExec(loader, source, sourceMap, address, nonce) {\r\n    if (!head)\r\n      head = document.head || document.body || document.documentElement;\r\n\r\n    var script = document.createElement('script');\r\n    script.text = getSource(source, sourceMap, address, false);\r\n    var onerror = window.onerror;\r\n    var e;\r\n    window.onerror = function(_e) {\r\n      e = addToError(_e, 'Evaluating ' + address);\r\n      if (onerror)\r\n        onerror.apply(this, arguments);\r\n    };\r\n    preExec(loader);\r\n\r\n    if (nonce)\r\n      script.setAttribute('nonce', nonce);\r\n\r\n    head.appendChild(script);\r\n    head.removeChild(script);\r\n    postExec();\r\n    window.onerror = onerror;\r\n    if (e)\r\n      return e;\r\n  }\r\n\r\n  var vm;\r\n  var useVm;\r\n\r\n  var curSystem;\r\n\r\n  var callCounter = 0;\r\n  function preExec (loader) {\r\n    if (callCounter++ == 0)\r\n      curSystem = envGlobal.System;\r\n    envGlobal.System = envGlobal.SystemJS = loader;\r\n  }\r\n  function postExec () {\r\n    if (--callCounter == 0)\r\n      envGlobal.System = envGlobal.SystemJS = curSystem;\r\n  }\r\n\r\n  var supportsScriptExec = false;\r\n  if (isBrowser && typeof document != 'undefined' && document.getElementsByTagName) {\r\n    if (!(window.chrome && window.chrome.extension || navigator.userAgent.match(/^Node\\.js/)))\r\n      supportsScriptExec = true;\r\n  }\r\n\r\n  function evaluate (loader, source, sourceMap, address, integrity, nonce, noWrap) {\r\n    if (!source)\r\n      return;\r\n    if (nonce && supportsScriptExec)\r\n      return scriptExec(loader, source, sourceMap, address, nonce);\r\n    try {\r\n      preExec(loader);\r\n      // global scoped eval for node (avoids require scope leak)\r\n      if (!vm && loader._nodeRequire) {\r\n        vm = loader._nodeRequire('vm');\r\n        useVm = vm.runInThisContext(\"typeof System !== 'undefined' && System\") === loader;\r\n      }\r\n      if (useVm)\r\n        vm.runInThisContext(getSource(source, sourceMap, address, !noWrap), { filename: address + (sourceMap ? '!transpiled' : '') });\r\n      else\r\n        (0, eval)(getSource(source, sourceMap, address, !noWrap));\r\n      postExec();\r\n    }\r\n    catch (e) {\r\n      postExec();\r\n      return e;\r\n    }\r\n  }\n\n  function setHelpers (loader) {\r\n    loader.set('@@cjs-helpers', loader.newModule({\r\n      requireResolve: requireResolve.bind(loader),\r\n      getPathVars: getPathVars\r\n    }));\r\n\r\n    loader.set('@@global-helpers', loader.newModule({\r\n      prepareGlobal: prepareGlobal\r\n    }));\r\n  }\r\n\r\n  function setAmdHelper (loader) {\r\n\r\n    /*\r\n      AMD-compatible require\r\n      To copy RequireJS, set window.require = window.requirejs = loader.amdRequire\r\n    */\r\n    function require (names, callback, errback, referer) {\r\n      // in amd, first arg can be a config object... we just ignore\r\n      if (typeof names === 'object' && !(names instanceof Array))\r\n        return require.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));\r\n\r\n      // amd require\r\n      if (typeof names === 'string' && typeof callback === 'function')\r\n        names = [names];\r\n      if (names instanceof Array) {\r\n        var dynamicRequires = [];\r\n        for (var i = 0; i < names.length; i++)\r\n          dynamicRequires.push(loader.import(names[i], referer));\r\n        Promise.all(dynamicRequires).then(function (modules) {\r\n          if (callback)\r\n            callback.apply(null, modules);\r\n        }, errback);\r\n      }\r\n\r\n      // commonjs require\r\n      else if (typeof names === 'string') {\r\n        var normalized = loader.decanonicalize(names, referer);\r\n        var module = loader.get(normalized);\r\n        if (!module)\r\n          throw new Error('Module not already loaded loading \"' + names + '\" as ' + normalized + (referer ? ' from \"' + referer + '\".' : '.'));\r\n        return '__useDefault' in module ? module.__useDefault : module;\r\n      }\r\n\r\n      else\r\n        throw new TypeError('Invalid require');\r\n    }\r\n\r\n    function define (name, deps, factory) {\r\n      if (typeof name !== 'string') {\r\n        factory = deps;\r\n        deps = name;\r\n        name = null;\r\n      }\r\n\r\n      if (!(deps instanceof Array)) {\r\n        factory = deps;\r\n        deps = ['require', 'exports', 'module'].splice(0, factory.length);\r\n      }\r\n\r\n      if (typeof factory !== 'function')\r\n        factory = (function (factory) {\r\n          return function() { return factory; }\r\n        })(factory);\r\n\r\n      if (!name) {\r\n        if (curMetaDeps) {\r\n          deps = deps.concat(curMetaDeps);\r\n          curMetaDeps = undefined;\r\n        }\r\n      }\r\n\r\n      // remove system dependencies\r\n      var requireIndex, exportsIndex, moduleIndex;\r\n\r\n      if ((requireIndex = deps.indexOf('require')) !== -1) {\r\n\r\n        deps.splice(requireIndex, 1);\r\n\r\n        // only trace cjs requires for non-named\r\n        // named defines assume the trace has already been done\r\n        if (!name)\r\n          deps = deps.concat(amdGetCJSDeps(factory.toString(), requireIndex));\r\n      }\r\n\r\n      if ((exportsIndex = deps.indexOf('exports')) !== -1)\r\n        deps.splice(exportsIndex, 1);\r\n\r\n      if ((moduleIndex = deps.indexOf('module')) !== -1)\r\n        deps.splice(moduleIndex, 1);\r\n\r\n      function execute (req, exports, module) {\r\n        var depValues = [];\r\n        for (var i = 0; i < deps.length; i++)\r\n          depValues.push(req(deps[i]));\r\n\r\n        module.uri = module.id;\r\n\r\n        module.config = noop;\r\n\r\n        // add back in system dependencies\r\n        if (moduleIndex !== -1)\r\n          depValues.splice(moduleIndex, 0, module);\r\n\r\n        if (exportsIndex !== -1)\r\n          depValues.splice(exportsIndex, 0, exports);\r\n\r\n        if (requireIndex !== -1) {\r\n          var contextualRequire = function (names, callback, errback) {\r\n            if (typeof names === 'string' && typeof callback !== 'function')\r\n              return req(names);\r\n            return require.call(loader, names, callback, errback, module.id);\r\n          };\r\n          contextualRequire.toUrl = function (name) {\r\n            return loader.normalizeSync(name, module.id);\r\n          };\r\n          depValues.splice(requireIndex, 0, contextualRequire);\r\n        }\r\n\r\n        // set global require to AMD require\r\n        var curRequire = envGlobal.require;\r\n        envGlobal.require = require;\r\n\r\n        var output = factory.apply(exportsIndex === -1 ? envGlobal : exports, depValues);\r\n\r\n        envGlobal.require = curRequire;\r\n\r\n        if (typeof output !== 'undefined')\r\n          module.exports = output;\r\n      }\r\n\r\n      // anonymous define\r\n      if (!name) {\r\n        loader.registerDynamic(deps, false, curEsModule ? wrapEsModuleExecute(execute) : execute);\r\n      }\r\n      else {\r\n        loader.registerDynamic(name, deps, false, execute);\r\n\r\n        // if we don't have any other defines,\r\n        // then let this be an anonymous define\r\n        // this is just to support single modules of the form:\r\n        // define('jquery')\r\n        // still loading anonymously\r\n        // because it is done widely enough to be useful\r\n        // as soon as there is more than one define, this gets removed though\r\n        if (lastNamedDefine) {\r\n          lastNamedDefine = undefined;\r\n          multipleNamedDefines = true;\r\n        }\r\n        else if (!multipleNamedDefines) {\r\n          lastNamedDefine = [deps, execute];\r\n        }\r\n      }\r\n    }\r\n    define.amd = {};\r\n\r\n    loader.amdDefine = define;\r\n    loader.amdRequire = require;\r\n  }\r\n\r\n  // CJS\r\n  var windowOrigin;\r\n  if (typeof window !== 'undefined' && typeof document !== 'undefined' && window.location)\r\n    windowOrigin = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');\r\n\r\n  function stripOrigin(path) {\r\n    if (path.substr(0, 8) === 'file:///')\r\n      return path.substr(7 + !!isWindows);\r\n\r\n    if (windowOrigin && path.substr(0, windowOrigin.length) === windowOrigin)\r\n      return path.substr(windowOrigin.length);\r\n\r\n    return path;\r\n  }\r\n\r\n  function requireResolve (request, parentId) {\r\n    return stripOrigin(this.normalizeSync(request, parentId));\r\n  }\r\n\r\n  function getPathVars (moduleId) {\r\n    // remove any plugin syntax\r\n    var pluginIndex = moduleId.lastIndexOf('!');\r\n    var filename;\r\n    if (pluginIndex !== -1)\r\n      filename = moduleId.substr(0, pluginIndex);\r\n    else\r\n      filename = moduleId;\r\n\r\n    var dirname = filename.split('/');\r\n    dirname.pop();\r\n    dirname = dirname.join('/');\r\n\r\n    return {\r\n      filename: stripOrigin(filename),\r\n      dirname: stripOrigin(dirname)\r\n    };\r\n  }\r\n\r\n  var commentRegEx = /(^|[^\\\\])(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/mg;\r\n  var stringRegEx = /(\"[^\"\\\\\\n\\r]*(\\\\.[^\"\\\\\\n\\r]*)*\"|'[^'\\\\\\n\\r]*(\\\\.[^'\\\\\\n\\r]*)*')/g;\r\n\r\n  // extract CJS dependencies from source text via regex static analysis\r\n  // read require('x') statements not in comments or strings\r\n  function getCJSDeps (source) {\r\n    cjsRequireRegEx.lastIndex = commentRegEx.lastIndex = stringRegEx.lastIndex = 0;\r\n\r\n    var deps = [];\r\n\r\n    var match;\r\n\r\n    // track string and comment locations for unminified source\r\n    var stringLocations = [], commentLocations = [];\r\n\r\n    function inLocation (locations, match) {\r\n      for (var i = 0; i < locations.length; i++)\r\n        if (locations[i][0] < match.index && locations[i][1] > match.index)\r\n          return true;\r\n      return false;\r\n    }\r\n\r\n    if (source.length / source.split('\\n').length < 200) {\r\n      while (match = stringRegEx.exec(source))\r\n        stringLocations.push([match.index, match.index + match[0].length]);\r\n\r\n      // TODO: track template literals here before comments\r\n\r\n      while (match = commentRegEx.exec(source)) {\r\n        // only track comments not starting in strings\r\n        if (!inLocation(stringLocations, match))\r\n          commentLocations.push([match.index + match[1].length, match.index + match[0].length - 1]);\r\n      }\r\n    }\r\n\r\n    while (match = cjsRequireRegEx.exec(source)) {\r\n      // ensure we're not within a string or comment location\r\n      if (!inLocation(stringLocations, match) && !inLocation(commentLocations, match)) {\r\n        var dep = match[1].substr(1, match[1].length - 2);\r\n        // skip cases like require('\" + file + \"')\r\n        if (dep.match(/\"|'/))\r\n          continue;\r\n        deps.push(dep);\r\n      }\r\n    }\r\n\r\n    return deps;\r\n  }\r\n\r\n  // Global\r\n  // bare minimum ignores\r\n  var ignoredGlobalProps = ['_g', 'sessionStorage', 'localStorage', 'clipboardData', 'frames', 'frameElement', 'external',\r\n    'mozAnimationStartTime', 'mozPaintCount', 'webkitStorageInfo', 'webkitIndexedDB', 'mozInnerScreenY', 'mozInnerScreenX'];\r\n\r\n  var globalSnapshot;\r\n  function globalIterator (globalName) {\r\n    if (ignoredGlobalProps.indexOf(globalName) !== -1)\r\n      return;\r\n    try {\r\n      var value = envGlobal[globalName];\r\n    }\r\n    catch (e) {\r\n      ignoredGlobalProps.push(globalName);\r\n    }\r\n    this(globalName, value);\r\n  }\r\n\r\n  function getGlobalValue (exports) {\r\n    if (typeof exports === 'string')\r\n      return readMemberExpression(exports, envGlobal);\r\n\r\n    if (!(exports instanceof Array))\r\n      throw new Error('Global exports must be a string or array.');\r\n\r\n    var globalValue = {};\r\n    for (var i = 0; i < exports.length; i++)\r\n      globalValue[exports[i].split('.').pop()] = readMemberExpression(exports[i], envGlobal);\r\n    return globalValue;\r\n  }\r\n\r\n  function prepareGlobal (moduleName, exports, globals, encapsulate) {\r\n    // disable module detection\r\n    var curDefine = envGlobal.define;\r\n\r\n    envGlobal.define = undefined;\r\n\r\n    // set globals\r\n    var oldGlobals;\r\n    if (globals) {\r\n      oldGlobals = {};\r\n      for (var g in globals) {\r\n        oldGlobals[g] = envGlobal[g];\r\n        envGlobal[g] = globals[g];\r\n      }\r\n    }\r\n\r\n    // store a complete copy of the global object in order to detect changes\r\n    if (!exports) {\r\n      globalSnapshot = {};\r\n\r\n      Object.keys(envGlobal).forEach(globalIterator, function (name, value) {\r\n        globalSnapshot[name] = value;\r\n      });\r\n    }\r\n\r\n    // return function to retrieve global\r\n    return function () {\r\n      var globalValue = exports ? getGlobalValue(exports) : {};\r\n\r\n      var singleGlobal;\r\n      var multipleExports = !!exports;\r\n\r\n      if (!exports || encapsulate)\r\n        Object.keys(envGlobal).forEach(globalIterator, function (name, value) {\r\n          if (globalSnapshot[name] === value)\r\n            return;\r\n          if (value === undefined)\r\n            return;\r\n\r\n          // allow global encapsulation where globals are removed\r\n          if (encapsulate)\r\n            envGlobal[name] = undefined;\r\n\r\n          if (!exports) {\r\n            globalValue[name] = value;\r\n\r\n            if (singleGlobal !== undefined) {\r\n              if (!multipleExports && singleGlobal !== value)\r\n                multipleExports = true;\r\n            }\r\n            else {\r\n              singleGlobal = value;\r\n            }\r\n          }\r\n        });\r\n\r\n      globalValue = multipleExports ? globalValue : singleGlobal;\r\n\r\n      // revert globals\r\n      if (oldGlobals) {\r\n        for (var g in oldGlobals)\r\n          envGlobal[g] = oldGlobals[g];\r\n      }\r\n      envGlobal.define = curDefine;\r\n\r\n      return globalValue;\r\n    };\r\n  }\r\n\r\n  // AMD\r\n  var cjsRequirePre = \"(?:^|[^$_a-zA-Z\\\\xA0-\\\\uFFFF.])\";\r\n  var cjsRequirePost = \"\\\\s*\\\\(\\\\s*(\\\"([^\\\"]+)\\\"|'([^']+)')\\\\s*\\\\)\";\r\n  var fnBracketRegEx = /\\(([^\\)]*)\\)/;\r\n  var wsRegEx = /^\\s+|\\s+$/g;\r\n\r\n  var requireRegExs = {};\r\n\r\n  function amdGetCJSDeps(source, requireIndex) {\r\n\r\n    // remove comments\r\n    source = source.replace(commentRegEx, '');\r\n\r\n    // determine the require alias\r\n    var params = source.match(fnBracketRegEx);\r\n    var requireAlias = (params[1].split(',')[requireIndex] || 'require').replace(wsRegEx, '');\r\n\r\n    // find or generate the regex for this requireAlias\r\n    var requireRegEx = requireRegExs[requireAlias] || (requireRegExs[requireAlias] = new RegExp(cjsRequirePre + requireAlias + cjsRequirePost, 'g'));\r\n\r\n    requireRegEx.lastIndex = 0;\r\n\r\n    var deps = [];\r\n\r\n    var match;\r\n    while (match = requireRegEx.exec(source))\r\n      deps.push(match[2] || match[3]);\r\n\r\n    return deps;\r\n  }\r\n\r\n  function wrapEsModuleExecute (execute) {\r\n    return function (require, exports, module) {\r\n      execute(require, exports, module);\r\n      exports = module.exports;\r\n      if ((typeof exports === 'object' || typeof exports === 'function') && !('__esModule' in exports))\r\n        Object.defineProperty(module.exports, '__esModule', {\r\n          value: true\r\n        });\r\n    };\r\n  }\r\n\r\n  // generate anonymous define from singular named define\r\n  var multipleNamedDefines = false;\r\n  var lastNamedDefine;\r\n  var curMetaDeps;\r\n  var curEsModule = false;\r\n  function clearLastDefine (metaDeps, esModule) {\r\n    curMetaDeps = metaDeps;\r\n    curEsModule = esModule;\r\n    lastNamedDefine = undefined;\r\n    multipleNamedDefines = false;\r\n  }\r\n  function registerLastDefine (loader) {\r\n    if (lastNamedDefine)\r\n      loader.registerDynamic(curMetaDeps ? lastNamedDefine[0].concat(curMetaDeps) : lastNamedDefine[0],\r\n          false, curEsModule ? wrapEsModuleExecute(lastNamedDefine[1]) : lastNamedDefine[1]);\r\n\r\n    // bundles are an empty module\r\n    else if (multipleNamedDefines)\r\n      loader.registerDynamic([], false, noop);\r\n  }\n\n  var supportsScriptLoad = (isBrowser || isWorker) && typeof navigator !== 'undefined' && navigator.userAgent && !navigator.userAgent.match(/MSIE (9|10).0/);\r\n\r\n  // include the node require since we're overriding it\r\n  var nodeRequire;\r\n  if (typeof require !== 'undefined' && typeof process !== 'undefined' && !process.browser)\r\n    nodeRequire = require;\r\n\r\n  function setMetaEsModule (metadata, moduleValue) {\r\n    if (metadata.load.esModule && (typeof moduleValue === 'object' || typeof moduleValue === 'function') &&\r\n        !('__esModule' in moduleValue))\r\n      Object.defineProperty(moduleValue, '__esModule', {\r\n        value: true\r\n      });\r\n  }\r\n\r\n  function instantiate$1 (key, processAnonRegister) {\r\n    var loader = this;\r\n    var config = this[CONFIG];\r\n    // first do bundles and depCache\r\n    return (loadBundlesAndDepCache(config, this, key) || resolvedPromise$1)\r\n    .then(function () {\r\n      if (processAnonRegister())\r\n        return;\r\n\r\n      var metadata = loader[METADATA][key];\r\n\r\n      // node module loading\r\n      if (key.substr(0, 6) === '@node/') {\r\n        if (!loader._nodeRequire)\r\n          throw new TypeError('Error loading ' + key + '. Can only load node core modules in Node.');\r\n        loader.registerDynamic([], false, function () {\r\n          return loadNodeModule.call(loader, key.substr(6), loader.baseURL);\r\n        });\r\n        processAnonRegister();\r\n        return;\r\n      }\r\n\r\n      if (metadata.load.scriptLoad ) {\r\n        if (metadata.load.pluginKey || !supportsScriptLoad) {\r\n          metadata.load.scriptLoad = false;\r\n          warn.call(config, 'scriptLoad not supported for \"' + key + '\"');\r\n        }\r\n      }\r\n      else if (metadata.load.scriptLoad !== false && !metadata.load.pluginKey && supportsScriptLoad) {\r\n        // auto script load AMD, global without deps\r\n        if (!metadata.load.deps && !metadata.load.globals &&\r\n            (metadata.load.format === 'system' || metadata.load.format === 'register' || metadata.load.format === 'global' && metadata.load.exports))\r\n          metadata.load.scriptLoad = true;\r\n      }\r\n\r\n      // fetch / translate / instantiate pipeline\r\n      if (!metadata.load.scriptLoad)\r\n        return initializePlugin(loader, key, metadata)\r\n        .then(function () {\r\n          return runFetchPipeline(loader, key, metadata, processAnonRegister, config.wasm);\r\n        })\r\n\r\n      // just script loading\r\n      return new Promise(function (resolve, reject) {\r\n        if (metadata.load.format === 'amd' && envGlobal.define !== loader.amdDefine)\r\n          throw new Error('Loading AMD with scriptLoad requires setting the global `' + globalName + '.define = SystemJS.amdDefine`');\r\n\r\n        scriptLoad(key, metadata.load.crossOrigin, metadata.load.integrity, function () {\r\n          if (!processAnonRegister()) {\r\n            metadata.load.format = 'global';\r\n            var globalValue = metadata.load.exports && getGlobalValue(metadata.load.exports);\r\n            loader.registerDynamic([], false, function () {\r\n              setMetaEsModule(metadata, globalValue);\r\n              return globalValue;\r\n            });\r\n            processAnonRegister();\r\n          }\r\n\r\n          resolve();\r\n        }, reject);\r\n      });\r\n    })\r\n    .then(function (instantiated) {\r\n      delete loader[METADATA][key];\r\n      return instantiated;\r\n    });\r\n  }\r\n  function initializePlugin (loader, key, metadata) {\r\n    if (!metadata.pluginKey)\r\n      return resolvedPromise$1;\r\n\r\n    return loader.import(metadata.pluginKey).then(function (plugin) {\r\n      metadata.pluginModule = plugin;\r\n      metadata.pluginLoad = {\r\n        name: key,\r\n        address: metadata.pluginArgument,\r\n        source: undefined,\r\n        metadata: metadata.load\r\n      };\r\n      metadata.load.deps = metadata.load.deps || [];\r\n    });\r\n  }\r\n\r\n  function loadBundlesAndDepCache (config, loader, key) {\r\n    // load direct deps, in turn will pick up their trace trees\r\n    var deps;\r\n    if (isBrowser && (deps = config.depCache[key])) {\r\n      for (var i = 0; i < deps.length; i++)\r\n        loader.normalize(deps[i], key).then(preloadScript);\r\n    }\r\n    else {\r\n      var matched = false;\r\n      for (var b in config.bundles) {\r\n        for (var i = 0; i < config.bundles[b].length; i++) {\r\n          var curModule = config.bundles[b][i];\r\n\r\n          if (curModule === key) {\r\n            matched = true;\r\n            break;\r\n          }\r\n\r\n          // wildcard in bundles includes / boundaries\r\n          if (curModule.indexOf('*') !== -1) {\r\n            var parts = curModule.split('*');\r\n            if (parts.length !== 2) {\r\n              config.bundles[b].splice(i--, 1);\r\n              continue;\r\n            }\r\n\r\n            if (key.substr(0, parts[0].length) === parts[0] &&\r\n                key.substr(key.length - parts[1].length, parts[1].length) === parts[1]) {\r\n              matched = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (matched)\r\n          return loader.import(b);\r\n      }\r\n    }\r\n  }\r\n\r\n  function runFetchPipeline (loader, key, metadata, processAnonRegister, wasm) {\r\n    if (metadata.load.exports && !metadata.load.format)\r\n      metadata.load.format = 'global';\r\n\r\n    return resolvedPromise$1\r\n\r\n    // locate\r\n    .then(function () {\r\n      if (!metadata.pluginModule || !metadata.pluginModule.locate)\r\n        return;\r\n\r\n      return Promise.resolve(metadata.pluginModule.locate.call(loader, metadata.pluginLoad))\r\n      .then(function (address) {\r\n        if (address)\r\n          metadata.pluginLoad.address = address;\r\n      });\r\n    })\r\n\r\n    // fetch\r\n    .then(function () {\r\n      if (!metadata.pluginModule)\r\n        return fetch$1(key, metadata.load.authorization, metadata.load.integrity, wasm);\r\n\r\n      wasm = false;\r\n\r\n      if (!metadata.pluginModule.fetch)\r\n        return fetch$1(metadata.pluginLoad.address, metadata.load.authorization, metadata.load.integrity, false);\r\n\r\n      return metadata.pluginModule.fetch.call(loader, metadata.pluginLoad, function (load) {\r\n        return fetch$1(load.address, metadata.load.authorization, metadata.load.integrity, false);\r\n      });\r\n    })\r\n\r\n    .then(function (fetched) {\r\n      // fetch is already a utf-8 string if not doing wasm detection\r\n      if (!wasm || typeof fetched === 'string')\r\n        return translateAndInstantiate(loader, key, fetched, metadata, processAnonRegister);\r\n\r\n      return checkInstantiateWasm(loader, fetched, processAnonRegister)\r\n      .then(function (wasmInstantiated) {\r\n        if (wasmInstantiated)\r\n          return;\r\n\r\n        // not wasm -> convert buffer into utf-8 string to execute as a module\r\n        // TextDecoder compatibility matches WASM currently. Need to keep checking this.\r\n        // The TextDecoder interface is documented at http://encoding.spec.whatwg.org/#interface-textdecoder\r\n        var stringSource = isBrowser ? new TextDecoder('utf-8').decode(new Uint8Array(fetched)) : fetched.toString();\r\n        return translateAndInstantiate(loader, key, stringSource, metadata, processAnonRegister);\r\n      });\r\n    });\r\n  }\r\n\r\n  function translateAndInstantiate (loader, key, source, metadata, processAnonRegister) {\r\n    return Promise.resolve(source)\r\n    // translate\r\n    .then(function (source) {\r\n      if (metadata.load.format === 'detect')\r\n        metadata.load.format = undefined;\r\n\r\n      readMetaSyntax(source, metadata);\r\n\r\n      if (!metadata.pluginModule)\r\n        return source;\r\n\r\n      metadata.pluginLoad.source = source;\r\n\r\n      if (!metadata.pluginModule.translate)\r\n        return source;\r\n\r\n      return Promise.resolve(metadata.pluginModule.translate.call(loader, metadata.pluginLoad, metadata.traceOpts))\r\n      .then(function (translated) {\r\n        if (metadata.load.sourceMap) {\r\n          if (typeof metadata.load.sourceMap !== 'object')\r\n            throw new Error('metadata.load.sourceMap must be set to an object.');\r\n          sanitizeSourceMap(metadata.pluginLoad.address, metadata.load.sourceMap);\r\n        }\r\n\r\n        if (typeof translated === 'string')\r\n          return translated;\r\n        else\r\n          return metadata.pluginLoad.source;\r\n      });\r\n    })\r\n    .then(function (source) {\r\n      if (!metadata.load.format && source.substring(0, 8) === '\"bundle\"') {\r\n        metadata.load.format = 'system';\r\n        return source;\r\n      }\r\n\r\n      if (metadata.load.format === 'register' || !metadata.load.format && detectRegisterFormat(source)) {\r\n        metadata.load.format = 'register';\r\n        return source;\r\n      }\r\n\r\n      if (metadata.load.format !== 'esm' && (metadata.load.format || !source.match(esmRegEx))) {\r\n        return source;\r\n      }\r\n\r\n      metadata.load.format = 'esm';\r\n      return transpile(loader, source, key, metadata, processAnonRegister);\r\n    })\r\n\r\n    // instantiate\r\n    .then(function (translated) {\r\n      if (typeof translated !== 'string' || !metadata.pluginModule || !metadata.pluginModule.instantiate)\r\n        return translated;\r\n\r\n      var calledInstantiate = false;\r\n      metadata.pluginLoad.source = translated;\r\n      return Promise.resolve(metadata.pluginModule.instantiate.call(loader, metadata.pluginLoad, function (load) {\r\n        translated = load.source;\r\n        metadata.load = load.metadata;\r\n        if (calledInstantiate)\r\n          throw new Error('Instantiate must only be called once.');\r\n        calledInstantiate = true;\r\n      }))\r\n      .then(function (result) {\r\n        if (calledInstantiate)\r\n          return translated;\r\n        return protectedCreateNamespace(result);\r\n      });\r\n    })\r\n    .then(function (source) {\r\n      // plugin instantiate result case\r\n      if (typeof source !== 'string')\r\n        return source;\r\n\r\n      if (!metadata.load.format)\r\n        metadata.load.format = detectLegacyFormat(source);\r\n\r\n      var registered = false;\r\n\r\n      switch (metadata.load.format) {\r\n        case 'esm':\r\n        case 'register':\r\n        case 'system':\r\n          var err = evaluate(loader, source, metadata.load.sourceMap, key, metadata.load.integrity, metadata.load.nonce, false);\r\n          if (err)\r\n            throw err;\r\n          if (!processAnonRegister())\r\n            return emptyModule;\r\n          return;\r\n        break;\r\n\r\n        case 'json':\r\n          // warn.call(config, '\"json\" module format is deprecated.');\r\n          var parsed = JSON.parse(source);\r\n          return loader.newModule({ default: parsed, __useDefault: parsed });\r\n\r\n        case 'amd':\r\n          var curDefine = envGlobal.define;\r\n          envGlobal.define = loader.amdDefine;\r\n\r\n          clearLastDefine(metadata.load.deps, metadata.load.esModule);\r\n\r\n          var err = evaluate(loader, source, metadata.load.sourceMap, key, metadata.load.integrity, metadata.load.nonce, false);\r\n\r\n          // if didn't register anonymously, use the last named define if only one\r\n          registered = processAnonRegister();\r\n          if (!registered) {\r\n            registerLastDefine(loader);\r\n            registered = processAnonRegister();\r\n          }\r\n\r\n          envGlobal.define = curDefine;\r\n\r\n          if (err)\r\n            throw err;\r\n        break;\r\n\r\n        case 'cjs':\r\n          var metaDeps = metadata.load.deps;\r\n          var deps = (metadata.load.deps || []).concat(metadata.load.cjsRequireDetection ? getCJSDeps(source) : []);\r\n\r\n          for (var g in metadata.load.globals)\r\n            if (metadata.load.globals[g])\r\n              deps.push(metadata.load.globals[g]);\r\n\r\n          loader.registerDynamic(deps, true, function (require, exports, module) {\r\n            require.resolve = function (key) {\r\n              return requireResolve.call(loader, key, module.id);\r\n            };\r\n            // support module.paths ish\r\n            module.paths = [];\r\n            module.require = require;\r\n\r\n            // ensure meta deps execute first\r\n            if (!metadata.load.cjsDeferDepsExecute && metaDeps)\r\n              for (var i = 0; i < metaDeps.length; i++)\r\n                require(metaDeps[i]);\r\n\r\n            var pathVars = getPathVars(module.id);\r\n            var __cjsWrapper = {\r\n              exports: exports,\r\n              args: [require, exports, module, pathVars.filename, pathVars.dirname, envGlobal, envGlobal]\r\n            };\r\n\r\n            var cjsWrapper = \"(function (require, exports, module, __filename, __dirname, global, GLOBAL\";\r\n\r\n            // add metadata.globals to the wrapper arguments\r\n            if (metadata.load.globals)\r\n              for (var g in metadata.load.globals) {\r\n                __cjsWrapper.args.push(require(metadata.load.globals[g]));\r\n                cjsWrapper += \", \" + g;\r\n              }\r\n\r\n            // disable AMD detection\r\n            var define = envGlobal.define;\r\n            envGlobal.define = undefined;\r\n            envGlobal.__cjsWrapper = __cjsWrapper;\r\n\r\n            source = cjsWrapper + \") {\" + source.replace(hashBangRegEx$1, '') + \"\\n}).apply(__cjsWrapper.exports, __cjsWrapper.args);\";\r\n\r\n            var err = evaluate(loader, source, metadata.load.sourceMap, key, metadata.load.integrity, metadata.load.nonce, false);\r\n            if (err)\r\n              throw err;\r\n\r\n            setMetaEsModule(metadata, exports);\r\n\r\n            envGlobal.__cjsWrapper = undefined;\r\n            envGlobal.define = define;\r\n          });\r\n          registered = processAnonRegister();\r\n        break;\r\n\r\n        case 'global':\r\n          var deps = metadata.load.deps || [];\r\n          for (var g in metadata.load.globals) {\r\n            var gl = metadata.load.globals[g];\r\n            if (gl)\r\n              deps.push(gl);\r\n          }\r\n\r\n          loader.registerDynamic(deps, false, function (require, exports, module) {\r\n            var globals;\r\n            if (metadata.load.globals) {\r\n              globals = {};\r\n              for (var g in metadata.load.globals)\r\n                if (metadata.load.globals[g])\r\n                  globals[g] = require(metadata.load.globals[g]);\r\n            }\r\n\r\n            var exportName = metadata.load.exports;\r\n\r\n            if (exportName)\r\n              source += '\\n' + globalName + '[\"' + exportName + '\"] = ' + exportName + ';';\r\n\r\n            var retrieveGlobal = prepareGlobal(module.id, exportName, globals, metadata.load.encapsulateGlobal);\r\n            var err = evaluate(loader, source, metadata.load.sourceMap, key, metadata.load.integrity, metadata.load.nonce, true);\r\n\r\n            if (err)\r\n              throw err;\r\n\r\n            var output = retrieveGlobal();\r\n            setMetaEsModule(metadata, output);\r\n            return output;\r\n          });\r\n          registered = processAnonRegister();\r\n        break;\r\n\r\n        default:\r\n          throw new TypeError('Unknown module format \"' + metadata.load.format + '\" for \"' + key + '\".' + (metadata.load.format === 'es6' ? ' Use \"esm\" instead here.' : ''));\r\n      }\r\n\r\n      if (!registered)\r\n        throw new Error('Module ' + key + ' detected as ' + metadata.load.format + ' but didn\\'t execute correctly.');\r\n    });\r\n  }\r\n\r\n  var globalName = typeof self != 'undefined' ? 'self' : 'global';\r\n\r\n  // good enough ES6 module detection regex - format detections not designed to be accurate, but to handle the 99% use case\r\n  var esmRegEx = /(^\\s*|[}\\);\\n]\\s*)(import\\s*(['\"]|(\\*\\s+as\\s+)?(?!type)([^\"'\\(\\)\\n; ]+)\\s*from\\s*['\"]|\\{)|export\\s+\\*\\s+from\\s+[\"']|export\\s*(\\{|default|function|class|var|const|let|async\\s+function))/;\r\n\r\n  var leadingCommentAndMetaRegEx = /^(\\s*\\/\\*[^\\*]*(\\*(?!\\/)[^\\*]*)*\\*\\/|\\s*\\/\\/[^\\n]*|\\s*\"[^\"]+\"\\s*;?|\\s*'[^']+'\\s*;?)*\\s*/;\r\n  function detectRegisterFormat(source) {\r\n    var leadingCommentAndMeta = source.match(leadingCommentAndMetaRegEx);\r\n    if (!leadingCommentAndMeta)\r\n      return false;\r\n    var codeStart = leadingCommentAndMeta[0].length;\r\n    return source.startsWith('System.register', codeStart) || source.startsWith('SystemJS.register', codeStart);\r\n  }\r\n\r\n  // AMD Module Format Detection RegEx\r\n  // define([.., .., ..], ...)\r\n  // define(varName); || define(function(require, exports) {}); || define({})\r\n  var amdRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.])define\\s*\\(\\s*(\"[^\"]+\"\\s*,\\s*|'[^']+'\\s*,\\s*)?\\s*(\\[(\\s*((\"[^\"]+\"|'[^']+')\\s*,|\\/\\/.*\\r?\\n|\\/\\*(.|\\s)*?\\*\\/))*(\\s*(\"[^\"]+\"|'[^']+')\\s*,?)?(\\s*(\\/\\/.*\\r?\\n|\\/\\*(.|\\s)*?\\*\\/))*\\s*\\]|function\\s*|{|[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*\\))/;\r\n\r\n  /// require('...') || exports[''] = ... || exports.asd = ... || module.exports = ...\r\n  var cjsExportsRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.])(exports\\s*(\\[['\"]|\\.)|module(\\.exports|\\['exports'\\]|\\[\"exports\"\\])\\s*(\\[['\"]|[=,\\.]))/;\r\n\r\n  // used to support leading #!/usr/bin/env in scripts as supported in Node\r\n  var hashBangRegEx$1 = /^\\#\\!.*/;\r\n\r\n  function detectLegacyFormat (source) {\r\n    if (source.match(amdRegEx))\r\n      return 'amd';\r\n\r\n    cjsExportsRegEx.lastIndex = 0;\r\n    cjsRequireRegEx.lastIndex = 0;\r\n    if (cjsRequireRegEx.exec(source) || cjsExportsRegEx.exec(source))\r\n      return 'cjs';\r\n\r\n    // global is the fallback format\r\n    return 'global';\r\n  }\r\n\r\n  function sanitizeSourceMap (address, sourceMap) {\r\n    var originalName = address.split('!')[0];\r\n\r\n    // force set the filename of the original file\r\n    if (!sourceMap.file || sourceMap.file == address)\r\n      sourceMap.file = originalName + '!transpiled';\r\n\r\n    // force set the sources list if only one source\r\n    if (!sourceMap.sources || sourceMap.sources.length <= 1 && (!sourceMap.sources[0] || sourceMap.sources[0] === address))\r\n      sourceMap.sources = [originalName];\r\n  }\r\n\r\n  function transpile (loader, source, key, metadata, processAnonRegister) {\r\n    if (!loader.transpiler)\r\n      throw new TypeError('Unable to dynamically transpile ES module\\n   A loader plugin needs to be configured via `SystemJS.config({ transpiler: \\'transpiler-module\\' })`.');\r\n\r\n    // deps support for es transpile\r\n    if (metadata.load.deps) {\r\n      var depsPrefix = '';\r\n      for (var i = 0; i < metadata.load.deps.length; i++)\r\n        depsPrefix += 'import \"' + metadata.load.deps[i] + '\"; ';\r\n      source = depsPrefix + source;\r\n    }\r\n\r\n    // do transpilation\r\n    return loader.import.call(loader, loader.transpiler)\r\n    .then(function (transpiler) {\r\n      transpiler = transpiler.__useDefault || transpiler;\r\n\r\n      // translate hooks means this is a transpiler plugin instead of a raw implementation\r\n      if (!transpiler.translate)\r\n        throw new Error(loader.transpiler + ' is not a valid transpiler plugin.');\r\n\r\n      // if transpiler is the same as the plugin loader, then don't run twice\r\n      if (transpiler === metadata.pluginModule)\r\n        return source;\r\n\r\n      // convert the source map into an object for transpilation chaining\r\n      if (typeof metadata.load.sourceMap === 'string')\r\n        metadata.load.sourceMap = JSON.parse(metadata.load.sourceMap);\r\n\r\n      metadata.pluginLoad = metadata.pluginLoad || {\r\n        name: key,\r\n        address: key,\r\n        source: source,\r\n        metadata: metadata.load\r\n      };\r\n      metadata.load.deps = metadata.load.deps || [];\r\n\r\n      return Promise.resolve(transpiler.translate.call(loader, metadata.pluginLoad, metadata.traceOpts))\r\n      .then(function (source) {\r\n        // sanitize sourceMap if an object not a JSON string\r\n        var sourceMap = metadata.load.sourceMap;\r\n        if (sourceMap && typeof sourceMap === 'object')\r\n          sanitizeSourceMap(key, sourceMap);\r\n\r\n        if (metadata.load.format === 'esm' && detectRegisterFormat(source))\r\n          metadata.load.format = 'register';\r\n\r\n        return source;\r\n      });\r\n    }, function (err) {\r\n      throw LoaderError__Check_error_message_for_loader_stack(err, 'Unable to load transpiler to transpile ' + key);\r\n    });\r\n  }\r\n\r\n  // detect any meta header syntax\r\n  // only set if not already set\r\n  var metaRegEx = /^(\\s*\\/\\*[^\\*]*(\\*(?!\\/)[^\\*]*)*\\*\\/|\\s*\\/\\/[^\\n]*|\\s*\"[^\"]+\"\\s*;?|\\s*'[^']+'\\s*;?)+/;\r\n  var metaPartRegEx = /\\/\\*[^\\*]*(\\*(?!\\/)[^\\*]*)*\\*\\/|\\/\\/[^\\n]*|\"[^\"]+\"\\s*;?|'[^']+'\\s*;?/g;\r\n\r\n  function setMetaProperty(target, p, value) {\r\n    var pParts = p.split('.');\r\n    var curPart;\r\n    while (pParts.length > 1) {\r\n      curPart = pParts.shift();\r\n      target = target[curPart] = target[curPart] || {};\r\n    }\r\n    curPart = pParts.shift();\r\n    if (target[curPart] === undefined)\r\n      target[curPart] = value;\r\n  }\r\n\r\n  function readMetaSyntax (source, metadata) {\r\n    var meta = source.match(metaRegEx);\r\n    if (!meta)\r\n      return;\r\n\r\n    var metaParts = meta[0].match(metaPartRegEx);\r\n\r\n    for (var i = 0; i < metaParts.length; i++) {\r\n      var curPart = metaParts[i];\r\n      var len = curPart.length;\r\n\r\n      var firstChar = curPart.substr(0, 1);\r\n      if (curPart.substr(len - 1, 1) == ';')\r\n        len--;\r\n\r\n      if (firstChar != '\"' && firstChar != \"'\")\r\n        continue;\r\n\r\n      var metaString = curPart.substr(1, curPart.length - 3);\r\n      var metaName = metaString.substr(0, metaString.indexOf(' '));\r\n\r\n      if (metaName) {\r\n        var metaValue = metaString.substr(metaName.length + 1, metaString.length - metaName.length - 1);\r\n\r\n        if (metaName === 'deps')\r\n          metaName = 'deps[]';\r\n\r\n        if (metaName.substr(metaName.length - 2, 2) === '[]') {\r\n          metaName = metaName.substr(0, metaName.length - 2);\r\n          metadata.load[metaName] = metadata.load[metaName] || [];\r\n          metadata.load[metaName].push(metaValue);\r\n        }\r\n        // \"use strict\" is not meta\r\n        else if (metaName !== 'use') {\r\n          setMetaProperty(metadata.load, metaName, metaValue);\r\n        }\r\n      }\r\n      else {\r\n        metadata.load[metaString] = true;\r\n      }\r\n    }\r\n  }\n\n  var scriptSrc;\r\n\r\n  // Promise detection and error message\r\n  if (typeof Promise === 'undefined')\r\n    throw new Error('SystemJS needs a Promise polyfill.');\r\n\r\n  if (typeof document !== 'undefined') {\r\n    var scripts = document.getElementsByTagName('script');\r\n    var curScript = scripts[scripts.length - 1];\r\n    if (document.currentScript && (curScript.defer || curScript.async))\r\n      curScript = document.currentScript;\r\n\r\n    scriptSrc = curScript && curScript.src;\r\n  }\r\n  // worker\r\n  else if (typeof importScripts !== 'undefined') {\r\n    try {\r\n      throw new Error('_');\r\n    }\r\n    catch (e) {\r\n      e.stack.replace(/(?:at|@).*(http.+):[\\d]+:[\\d]+/, function(m, url) {\r\n        scriptSrc = url;\r\n      });\r\n    }\r\n  }\r\n  // node\r\n  else if (typeof __filename !== 'undefined') {\r\n    scriptSrc = __filename;\r\n  }\r\n\r\n  function SystemJSLoader () {\r\n    RegisterLoader.call(this);\r\n\r\n    // NB deprecate\r\n    this._loader = {};\r\n\r\n    // internal metadata store\r\n    this[METADATA] = {};\r\n\r\n    // internal configuration\r\n    this[CONFIG] = {\r\n      baseURL: baseURI,\r\n      paths: {},\r\n\r\n      packageConfigPaths: [],\r\n      packageConfigKeys: [],\r\n      map: {},\r\n      packages: {},\r\n      depCache: {},\r\n      meta: {},\r\n      bundles: {},\r\n\r\n      production: false,\r\n\r\n      transpiler: undefined,\r\n      loadedBundles: {},\r\n\r\n      // global behaviour flags\r\n      warnings: false,\r\n      pluginFirst: false,\r\n\r\n      // enable wasm loading and detection when supported\r\n      wasm: false\r\n    };\r\n\r\n    // make the location of the system.js script accessible (if any)\r\n    this.scriptSrc = scriptSrc;\r\n\r\n    this._nodeRequire = nodeRequire;\r\n\r\n    // support the empty module, as a concept\r\n    this.registry.set('@empty', emptyModule);\r\n\r\n    setProduction.call(this, false, false);\r\n\r\n    // add module format helpers\r\n    setHelpers(this);\r\n    setAmdHelper(this);\r\n  }\r\n\r\n  var envModule;\r\n  function setProduction (isProduction, isBuilder) {\r\n    this[CONFIG].production = isProduction;\r\n    this.registry.set('@system-env', envModule = this.newModule({\r\n      browser: isBrowser,\r\n      node: !!this._nodeRequire,\r\n      production: !isBuilder && isProduction,\r\n      dev: isBuilder || !isProduction,\r\n      build: isBuilder,\r\n      'default': true\r\n    }));\r\n  }\r\n\r\n  SystemJSLoader.prototype = Object.create(RegisterLoader.prototype);\r\n\r\n  SystemJSLoader.prototype.constructor = SystemJSLoader;\r\n\r\n  // NB deprecate normalize\r\n  SystemJSLoader.prototype[SystemJSLoader.resolve = RegisterLoader.resolve] = SystemJSLoader.prototype.normalize = normalize;\r\n\r\n  SystemJSLoader.prototype.load = function (key, parentKey) {\r\n    warn.call(this[CONFIG], 'System.load is deprecated.');\r\n    return this.import(key, parentKey);\r\n  };\r\n\r\n  // NB deprecate decanonicalize, normalizeSync\r\n  SystemJSLoader.prototype.decanonicalize = SystemJSLoader.prototype.normalizeSync = SystemJSLoader.prototype.resolveSync = normalizeSync;\r\n\r\n  SystemJSLoader.prototype[SystemJSLoader.instantiate = RegisterLoader.instantiate] = instantiate$1;\r\n\r\n  SystemJSLoader.prototype.config = setConfig;\r\n  SystemJSLoader.prototype.getConfig = getConfig;\r\n\r\n  SystemJSLoader.prototype.global = envGlobal;\r\n\r\n  SystemJSLoader.prototype.import = function () {\r\n    return RegisterLoader.prototype.import.apply(this, arguments)\r\n    .then(function (m) {\r\n      return '__useDefault' in m ? m.__useDefault : m;\r\n    });\r\n  };\r\n\r\n  var configNames = ['baseURL', 'map', 'paths', 'packages', 'packageConfigPaths', 'depCache', 'meta', 'bundles', 'transpiler', 'warnings', 'pluginFirst', 'production', 'wasm'];\r\n\r\n  var hasProxy = typeof Proxy !== 'undefined';\r\n  for (var i = 0; i < configNames.length; i++) (function (configName) {\r\n    Object.defineProperty(SystemJSLoader.prototype, configName, {\r\n      get: function () {\r\n        var cfg = getConfigItem(this[CONFIG], configName);\r\n\r\n        if (hasProxy && typeof cfg === 'object')\r\n          cfg = new Proxy(cfg, {\r\n            set: function (target, option) {\r\n              throw new Error('Cannot set SystemJS.' + configName + '[\"' + option + '\"] directly. Use SystemJS.config({ ' + configName + ': { \"' + option + '\": ... } }) rather.');\r\n            }\r\n          });\r\n\r\n        //if (typeof cfg === 'object')\r\n        //  warn.call(this[CONFIG], 'Referencing `SystemJS.' + configName + '` is deprecated. Use the config getter `SystemJS.getConfig(\\'' + configName + '\\')`');\r\n        return cfg;\r\n      },\r\n      set: function (name) {\r\n        throw new Error('Setting `SystemJS.' + configName + '` directly is no longer supported. Use `SystemJS.config({ ' + configName + ': ... })`.');\r\n      }\r\n    });\r\n  })(configNames[i]);\r\n\r\n  /*\r\n   * Backwards-compatible registry API, to be deprecated\r\n   */\r\n  function registryWarn(loader, method) {\r\n    warn.call(loader[CONFIG], 'SystemJS.' + method + ' is deprecated for SystemJS.registry.' + method);\r\n  }\r\n  SystemJSLoader.prototype.delete = function (key) {\r\n    registryWarn(this, 'delete');\r\n    return this.registry.delete(key);\r\n  };\r\n  SystemJSLoader.prototype.get = function (key) {\r\n    registryWarn(this, 'get');\r\n    return this.registry.get(key);\r\n  };\r\n  SystemJSLoader.prototype.has = function (key) {\r\n    registryWarn(this, 'has');\r\n    return this.registry.has(key);\r\n  };\r\n  SystemJSLoader.prototype.set = function (key, module) {\r\n    registryWarn(this, 'set');\r\n    return this.registry.set(key, module);\r\n  };\r\n  SystemJSLoader.prototype.newModule = function (bindings) {\r\n    return new ModuleNamespace(bindings);\r\n  };\r\n  SystemJSLoader.prototype.isModule = isModule;\r\n\r\n  // ensure System.register and System.registerDynamic decanonicalize\r\n  SystemJSLoader.prototype.register = function (key, deps, declare) {\r\n    if (typeof key === 'string')\r\n      key = decanonicalize.call(this, this[CONFIG], key);\r\n    return RegisterLoader.prototype.register.call(this, key, deps, declare);\r\n  };\r\n\r\n  SystemJSLoader.prototype.registerDynamic = function (key, deps, executingRequire, execute) {\r\n    if (typeof key === 'string')\r\n      key = decanonicalize.call(this, this[CONFIG], key);\r\n    return RegisterLoader.prototype.registerDynamic.call(this, key, deps, executingRequire, execute);\r\n  };\n\n  SystemJSLoader.prototype.version = \"0.21.3 Dev\";\r\n\r\n  var System = new SystemJSLoader();\r\n\r\n  // only set the global System on the global in browsers\r\n  if (isBrowser || isWorker)\r\n    envGlobal.SystemJS = envGlobal.System = System;\r\n\r\n  if (typeof module !== 'undefined' && module.exports)\r\n    module.exports = System;\n\n}());\n//# sourceMappingURL=system.src.js.map\n"],"sourceRoot":"webpack:///"}